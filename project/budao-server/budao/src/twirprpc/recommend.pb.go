// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recommend.proto

package budao

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RecommendVideoItem struct {
	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Payload string `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	TraceId string `protobuf:"bytes,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *RecommendVideoItem) Reset()                    { *m = RecommendVideoItem{} }
func (m *RecommendVideoItem) String() string            { return proto.CompactTextString(m) }
func (*RecommendVideoItem) ProtoMessage()               {}
func (*RecommendVideoItem) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *RecommendVideoItem) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

func (m *RecommendVideoItem) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *RecommendVideoItem) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *RecommendVideoItem) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type GetRecommendVideoRequest struct {
	Header        *Header       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChannelId     string        `protobuf:"bytes,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Count         uint32        `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	SessionReqNum uint32        `protobuf:"varint,4,opt,name=session_req_num,json=sessionReqNum" json:"session_req_num,omitempty"`
	AbtestItems   []*AbtestItem `protobuf:"bytes,5,rep,name=abtest_items,json=abtestItems" json:"abtest_items,omitempty"`
}

func (m *GetRecommendVideoRequest) Reset()                    { *m = GetRecommendVideoRequest{} }
func (m *GetRecommendVideoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRecommendVideoRequest) ProtoMessage()               {}
func (*GetRecommendVideoRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *GetRecommendVideoRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetRecommendVideoRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *GetRecommendVideoRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetRecommendVideoRequest) GetSessionReqNum() uint32 {
	if m != nil {
		return m.SessionReqNum
	}
	return 0
}

func (m *GetRecommendVideoRequest) GetAbtestItems() []*AbtestItem {
	if m != nil {
		return m.AbtestItems
	}
	return nil
}

type GetRecommendVideoResponse struct {
	Status              *Status               `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	RecommendVideoItems []*RecommendVideoItem `protobuf:"bytes,2,rep,name=recommend_video_items,json=recommendVideoItems" json:"recommend_video_items,omitempty"`
}

func (m *GetRecommendVideoResponse) Reset()                    { *m = GetRecommendVideoResponse{} }
func (m *GetRecommendVideoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRecommendVideoResponse) ProtoMessage()               {}
func (*GetRecommendVideoResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *GetRecommendVideoResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetRecommendVideoResponse) GetRecommendVideoItems() []*RecommendVideoItem {
	if m != nil {
		return m.RecommendVideoItems
	}
	return nil
}

type ReloadIndexRequest struct {
	IndexPath string `protobuf:"bytes,1,opt,name=index_path,json=indexPath" json:"index_path,omitempty"`
}

func (m *ReloadIndexRequest) Reset()                    { *m = ReloadIndexRequest{} }
func (m *ReloadIndexRequest) String() string            { return proto.CompactTextString(m) }
func (*ReloadIndexRequest) ProtoMessage()               {}
func (*ReloadIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *ReloadIndexRequest) GetIndexPath() string {
	if m != nil {
		return m.IndexPath
	}
	return ""
}

type ReloadIndexResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ReloadIndexResponse) Reset()                    { *m = ReloadIndexResponse{} }
func (m *ReloadIndexResponse) String() string            { return proto.CompactTextString(m) }
func (*ReloadIndexResponse) ProtoMessage()               {}
func (*ReloadIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *ReloadIndexResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*RecommendVideoItem)(nil), "budao.RecommendVideoItem")
	proto.RegisterType((*GetRecommendVideoRequest)(nil), "budao.GetRecommendVideoRequest")
	proto.RegisterType((*GetRecommendVideoResponse)(nil), "budao.GetRecommendVideoResponse")
	proto.RegisterType((*ReloadIndexRequest)(nil), "budao.ReloadIndexRequest")
	proto.RegisterType((*ReloadIndexResponse)(nil), "budao.ReloadIndexResponse")
}

func init() { proto.RegisterFile("recommend.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xd1, 0x6a, 0xd4, 0x40,
	0x14, 0x25, 0xbb, 0xee, 0xd6, 0xbd, 0x69, 0x68, 0x3b, 0x55, 0xc9, 0x06, 0x8a, 0x4b, 0x40, 0xe9,
	0x53, 0x1e, 0xb6, 0x3e, 0xfa, 0xa2, 0x08, 0x1a, 0x41, 0x29, 0x53, 0x28, 0xe2, 0x4b, 0x98, 0x64,
	0x2e, 0x24, 0xd2, 0xcc, 0x64, 0x67, 0x26, 0xa5, 0x8a, 0x3f, 0xe1, 0x2f, 0xf8, 0x05, 0x7e, 0x8c,
	0x1f, 0x24, 0x33, 0x99, 0xae, 0xb6, 0xbb, 0xfb, 0xe0, 0x5b, 0xce, 0x39, 0x33, 0x37, 0xe7, 0xdc,
	0x93, 0xc0, 0x81, 0xc2, 0x4a, 0xb6, 0x2d, 0x0a, 0x9e, 0x75, 0x4a, 0x1a, 0x49, 0x26, 0x65, 0xcf,
	0x99, 0x4c, 0xf6, 0x2d, 0x2b, 0xc5, 0x40, 0xa6, 0xdf, 0x81, 0xd0, 0xdb, 0x73, 0x97, 0x0d, 0x47,
	0x99, 0x1b, 0x6c, 0xc9, 0x1c, 0x1e, 0x5e, 0x5b, 0x50, 0x34, 0x3c, 0x0e, 0x16, 0xc1, 0xe9, 0x8c,
	0xee, 0x39, 0x9c, 0x73, 0xf2, 0x04, 0xa6, 0x0a, 0x99, 0x96, 0x22, 0x1e, 0x39, 0xc1, 0x23, 0x12,
	0xc3, 0x5e, 0xc7, 0xbe, 0x5e, 0x49, 0xc6, 0xe3, 0xf1, 0x70, 0xc3, 0x43, 0x3b, 0xcc, 0x28, 0x56,
	0xa1, 0x1d, 0xf6, 0x60, 0x90, 0x1c, 0xce, 0x79, 0xfa, 0x3b, 0x80, 0xf8, 0x2d, 0x9a, 0xbb, 0x0e,
	0x28, 0xae, 0x7a, 0xd4, 0x86, 0x3c, 0x83, 0x69, 0x8d, 0x8c, 0xa3, 0x72, 0x16, 0xc2, 0x65, 0x94,
	0xb9, 0x00, 0xd9, 0x3b, 0x47, 0x52, 0x2f, 0x92, 0x13, 0x80, 0xaa, 0x66, 0x42, 0xe0, 0x95, 0x7d,
	0xc1, 0x60, 0x6a, 0xe6, 0x99, 0x9c, 0x93, 0x47, 0x30, 0xa9, 0x64, 0x2f, 0x8c, 0x73, 0x15, 0xd1,
	0x01, 0x90, 0xe7, 0x70, 0xa0, 0x51, 0xeb, 0x46, 0x8a, 0x42, 0xe1, 0xaa, 0x10, 0x7d, 0xeb, 0xac,
	0x45, 0x34, 0xf2, 0x34, 0xc5, 0xd5, 0xc7, 0xbe, 0x25, 0x2f, 0x60, 0x9f, 0x95, 0x06, 0xb5, 0x29,
	0x1a, 0x83, 0xad, 0x8e, 0x27, 0x8b, 0xf1, 0x69, 0xb8, 0x3c, 0xf2, 0x4e, 0x5e, 0x39, 0xc9, 0x6e,
	0x8c, 0x86, 0x6c, 0xfd, 0xac, 0xd3, 0x1f, 0x01, 0xcc, 0xb7, 0xc4, 0xd2, 0x9d, 0x14, 0x1a, 0x6d,
	0x2e, 0x6d, 0x98, 0xe9, 0xf5, 0xbd, 0x5c, 0x17, 0x8e, 0xa4, 0x5e, 0x24, 0x1f, 0xe0, 0xf1, 0xba,
	0xc1, 0xc2, 0xb7, 0xe1, 0x3c, 0x8c, 0x9c, 0x87, 0xb9, 0xbf, 0xb5, 0xd9, 0x1e, 0x3d, 0x56, 0x1b,
	0x9c, 0x4e, 0xcf, 0x6c, 0xd1, 0xb6, 0x8f, 0x5c, 0x70, 0xbc, 0xb9, 0xdd, 0xf1, 0x09, 0x40, 0x63,
	0x71, 0xd1, 0x31, 0x53, 0xfb, 0xaa, 0x67, 0x8e, 0x39, 0x67, 0xa6, 0x4e, 0x5f, 0xc2, 0xf1, 0x9d,
	0x4b, 0xff, 0x95, 0x60, 0xf9, 0x2b, 0x80, 0xc3, 0xb5, 0xbd, 0x0b, 0x54, 0xd7, 0x4d, 0x85, 0xe4,
	0x12, 0x8e, 0x36, 0x56, 0x43, 0x9e, 0xfa, 0x01, 0xbb, 0xbe, 0x85, 0x64, 0xb1, 0xfb, 0x80, 0xf7,
	0xf4, 0x06, 0xc2, 0x7f, 0xac, 0x92, 0xbf, 0xeb, 0xb9, 0x9f, 0x39, 0x49, 0xb6, 0x49, 0xc3, 0x94,
	0xd7, 0x09, 0x1c, 0x56, 0xb2, 0xcd, 0xbe, 0xdc, 0x7c, 0xcb, 0xba, 0x72, 0x38, 0x77, 0x1e, 0xfc,
	0x1c, 0x8d, 0xdf, 0x7f, 0xfa, 0x5c, 0x4e, 0xdd, 0x1f, 0x73, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff,
	0xd4, 0x21, 0xcb, 0x1e, 0x59, 0x03, 0x00, 0x00,
}
