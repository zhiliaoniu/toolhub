// Code generated by protoc-gen-go. DO NOT EDIT.
// source: header.proto

/*
Package scheduler is a generated protocol buffer package.

It is generated from these files:
	header.proto
	heartbeat.proto
	service.proto

It has these top-level messages:
	Error
	RequestHeader
	ResponseHeader
	WorkerHeartBeatRequest
	WorkerHeartBeatResponse
	GetMembersRequest
	Member
	GetMembersResponse
*/
package scheduler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorType int32

const (
	ErrorType_OK      ErrorType = 0
	ErrorType_UNKNOWN ErrorType = 1
)

var ErrorType_name = map[int32]string{
	0: "OK",
	1: "UNKNOWN",
}
var ErrorType_value = map[string]int32{
	"OK":      0,
	"UNKNOWN": 1,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}
func (ErrorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Error struct {
	Type    ErrorType `protobuf:"varint,1,opt,name=type,enum=scheduler.ErrorType" json:"type,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Error) GetType() ErrorType {
	if m != nil {
		return m.Type
	}
	return ErrorType_OK
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RequestHeader struct {
	// cluster_id is the ID of the cluster which be sent to.
	ClusterId uint64 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	// worker id，某些场景下需要在请求中携带worker的唯一id
	WorkerId string `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestHeader) GetClusterId() uint64 {
	if m != nil {
		return m.ClusterId
	}
	return 0
}

func (m *RequestHeader) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

type ResponseHeader struct {
	// cluster_id is the ID of the cluster which sent the response.
	ClusterId uint64 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ResponseHeader) GetClusterId() uint64 {
	if m != nil {
		return m.ClusterId
	}
	return 0
}

func (m *ResponseHeader) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "scheduler.Error")
	proto.RegisterType((*RequestHeader)(nil), "scheduler.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "scheduler.ResponseHeader")
	proto.RegisterEnum("scheduler.ErrorType", ErrorType_name, ErrorType_value)
}

func init() { proto.RegisterFile("header.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xcd, 0xb2, 0x7f, 0xcc, 0xac, 0x2e, 0x25, 0x78, 0x28, 0x88, 0x50, 0x7a, 0x90, 0xe2,
	0xa1, 0x87, 0xf5, 0x33, 0x08, 0x2e, 0x81, 0x16, 0x82, 0xd2, 0xa3, 0xd4, 0x66, 0xb0, 0x62, 0x35,
	0x71, 0x92, 0x22, 0xfd, 0xf6, 0x62, 0xa2, 0x3d, 0x78, 0xda, 0xe3, 0xbc, 0xf7, 0xf8, 0xcd, 0xbc,
	0x81, 0xb3, 0x1e, 0x5b, 0x8d, 0x54, 0x5a, 0x32, 0xde, 0x08, 0xee, 0xba, 0x1e, 0xf5, 0x38, 0x20,
	0xe5, 0x12, 0x56, 0x77, 0x44, 0x86, 0x44, 0x01, 0x4b, 0x3f, 0x59, 0x4c, 0x59, 0xc6, 0x8a, 0xdd,
	0xfe, 0xa2, 0x9c, 0x23, 0x65, 0xf0, 0x1f, 0x26, 0x8b, 0x2a, 0x24, 0x44, 0x0a, 0x9b, 0x77, 0x74,
	0xae, 0x7d, 0xc1, 0x74, 0x91, 0xb1, 0x82, 0xab, 0xbf, 0x31, 0x97, 0x70, 0xae, 0xf0, 0x73, 0x44,
	0xe7, 0xef, 0xc3, 0x3a, 0x71, 0x05, 0xd0, 0x0d, 0xa3, 0xf3, 0x48, 0x4f, 0xaf, 0x3a, 0xa0, 0x97,
	0x8a, 0xff, 0x2a, 0x07, 0x2d, 0x2e, 0x81, 0x7f, 0x19, 0x7a, 0x8b, 0x6e, 0x64, 0x9d, 0x46, 0xe1,
	0xa0, 0xf3, 0x06, 0x76, 0x0a, 0x9d, 0x35, 0x1f, 0x0e, 0x8f, 0xa3, 0x5d, 0xc3, 0x0a, 0x7f, 0x4e,
	0x0d, 0xa4, 0xed, 0x3e, 0xf9, 0x5f, 0x41, 0x45, 0xfb, 0x26, 0x03, 0x3e, 0x57, 0x12, 0x6b, 0x58,
	0xd4, 0x32, 0x39, 0x11, 0x5b, 0xd8, 0x3c, 0x56, 0xb2, 0xaa, 0x9b, 0x2a, 0x61, 0xcf, 0xeb, 0xf0,
	0xa6, 0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xa3, 0x67, 0x3c, 0x36, 0x01, 0x00, 0x00,
}
