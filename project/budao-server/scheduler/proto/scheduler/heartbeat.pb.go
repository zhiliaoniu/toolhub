// Code generated by protoc-gen-go. DO NOT EDIT.
// source: heartbeat.proto

package scheduler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 在这里上报心跳，和其他信息
type WorkerHeartBeatRequest struct {
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *WorkerHeartBeatRequest) Reset()                    { *m = WorkerHeartBeatRequest{} }
func (m *WorkerHeartBeatRequest) String() string            { return proto.CompactTextString(m) }
func (*WorkerHeartBeatRequest) ProtoMessage()               {}
func (*WorkerHeartBeatRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *WorkerHeartBeatRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 在这里发送一些调度信息
type WorkerHeartBeatResponse struct {
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *WorkerHeartBeatResponse) Reset()                    { *m = WorkerHeartBeatResponse{} }
func (m *WorkerHeartBeatResponse) String() string            { return proto.CompactTextString(m) }
func (*WorkerHeartBeatResponse) ProtoMessage()               {}
func (*WorkerHeartBeatResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *WorkerHeartBeatResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkerHeartBeatRequest)(nil), "scheduler.WorkerHeartBeatRequest")
	proto.RegisterType((*WorkerHeartBeatResponse)(nil), "scheduler.WorkerHeartBeatResponse")
}

func init() { proto.RegisterFile("heartbeat.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x48, 0x4d, 0x2c,
	0x2a, 0x49, 0x4a, 0x4d, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2c, 0x4e, 0xce,
	0x48, 0x4d, 0x29, 0xcd, 0x49, 0x2d, 0x92, 0xe2, 0xc9, 0x48, 0x4d, 0x4c, 0x49, 0x2d, 0x82, 0x48,
	0x28, 0x79, 0x71, 0x89, 0x85, 0xe7, 0x17, 0x65, 0xa7, 0x16, 0x79, 0x80, 0x74, 0x38, 0xa5, 0x26,
	0x96, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x19, 0x70, 0xb1, 0x41, 0x54, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x49, 0xe8, 0xc1, 0xcd, 0xd0, 0x83, 0xaa, 0xf1, 0x00, 0xcb, 0x07,
	0x41, 0xd5, 0x29, 0xf9, 0x70, 0x89, 0x63, 0x98, 0x55, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x64,
	0x88, 0x66, 0x98, 0x24, 0x8a, 0x61, 0x10, 0x45, 0xa8, 0xa6, 0x25, 0xb1, 0x81, 0x1d, 0x68, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x91, 0x51, 0x7a, 0xc2, 0xcc, 0x00, 0x00, 0x00,
}
