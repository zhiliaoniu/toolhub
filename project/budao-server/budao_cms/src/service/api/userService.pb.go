// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userService.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 请求参数
type ReportCommentOperaRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cid  string `protobuf:"bytes,2,opt,name=cid" json:"cid,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *ReportCommentOperaRequest) Reset()                    { *m = ReportCommentOperaRequest{} }
func (m *ReportCommentOperaRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportCommentOperaRequest) ProtoMessage()               {}
func (*ReportCommentOperaRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *ReportCommentOperaRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReportCommentOperaRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *ReportCommentOperaRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// 返回参数
type ReportCommentResponse struct {
	Code string             `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *ReportCommentList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ReportCommentResponse) Reset()                    { *m = ReportCommentResponse{} }
func (m *ReportCommentResponse) String() string            { return proto.CompactTextString(m) }
func (*ReportCommentResponse) ProtoMessage()               {}
func (*ReportCommentResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *ReportCommentResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReportCommentResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ReportCommentResponse) GetData() *ReportCommentList {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReportCommentList struct {
	Data  []*ReportCommentMessage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReportCommentList) Reset()                    { *m = ReportCommentList{} }
func (m *ReportCommentList) String() string            { return proto.CompactTextString(m) }
func (*ReportCommentList) ProtoMessage()               {}
func (*ReportCommentList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *ReportCommentList) GetData() []*ReportCommentMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReportCommentList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReportCommentMessage struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Uid          string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	DeviceId     string `protobuf:"bytes,3,opt,name=deviceId" json:"deviceId,omitempty"`
	Cid          string `protobuf:"bytes,4,opt,name=cid" json:"cid,omitempty"`
	ReportReason string `protobuf:"bytes,5,opt,name=reportReason" json:"reportReason,omitempty"`
	OperaStatus  string `protobuf:"bytes,6,opt,name=operaStatus" json:"operaStatus,omitempty"`
	ReportTime   string `protobuf:"bytes,7,opt,name=reportTime" json:"reportTime,omitempty"`
	Vid          string `protobuf:"bytes,8,opt,name=vid" json:"vid,omitempty"`
	Content      string `protobuf:"bytes,9,opt,name=content" json:"content,omitempty"`
	CoverUrl     string `protobuf:"bytes,10,opt,name=coverUrl" json:"coverUrl,omitempty"`
	VideoUrl     string `protobuf:"bytes,11,opt,name=videoUrl" json:"videoUrl,omitempty"`
	Name         string `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	Photo        string `protobuf:"bytes,13,opt,name=photo" json:"photo,omitempty"`
	Phone        string `protobuf:"bytes,14,opt,name=phone" json:"phone,omitempty"`
}

func (m *ReportCommentMessage) Reset()                    { *m = ReportCommentMessage{} }
func (m *ReportCommentMessage) String() string            { return proto.CompactTextString(m) }
func (*ReportCommentMessage) ProtoMessage()               {}
func (*ReportCommentMessage) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *ReportCommentMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReportCommentMessage) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReportCommentMessage) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ReportCommentMessage) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *ReportCommentMessage) GetReportReason() string {
	if m != nil {
		return m.ReportReason
	}
	return ""
}

func (m *ReportCommentMessage) GetOperaStatus() string {
	if m != nil {
		return m.OperaStatus
	}
	return ""
}

func (m *ReportCommentMessage) GetReportTime() string {
	if m != nil {
		return m.ReportTime
	}
	return ""
}

func (m *ReportCommentMessage) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *ReportCommentMessage) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ReportCommentMessage) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *ReportCommentMessage) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *ReportCommentMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReportCommentMessage) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *ReportCommentMessage) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// 返回参数
type FeedbackListResponse struct {
	Code string        `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *FeedbackList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *FeedbackListResponse) Reset()                    { *m = FeedbackListResponse{} }
func (m *FeedbackListResponse) String() string            { return proto.CompactTextString(m) }
func (*FeedbackListResponse) ProtoMessage()               {}
func (*FeedbackListResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *FeedbackListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *FeedbackListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *FeedbackListResponse) GetData() *FeedbackList {
	if m != nil {
		return m.Data
	}
	return nil
}

type FeedbackList struct {
	Data  []*FeedbackMessage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64             `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *FeedbackList) Reset()                    { *m = FeedbackList{} }
func (m *FeedbackList) String() string            { return proto.CompactTextString(m) }
func (*FeedbackList) ProtoMessage()               {}
func (*FeedbackList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *FeedbackList) GetData() []*FeedbackMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FeedbackList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type FeedbackMessage struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Phone       string `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty"`
	Photo       string `protobuf:"bytes,3,opt,name=photo" json:"photo,omitempty"`
	FeedBack    string `protobuf:"bytes,4,opt,name=feedBack" json:"feedBack,omitempty"`
	FCreateTime string `protobuf:"bytes,5,opt,name=fCreateTime" json:"fCreateTime,omitempty"`
	Uid         string `protobuf:"bytes,6,opt,name=uid" json:"uid,omitempty"`
}

func (m *FeedbackMessage) Reset()                    { *m = FeedbackMessage{} }
func (m *FeedbackMessage) String() string            { return proto.CompactTextString(m) }
func (*FeedbackMessage) ProtoMessage()               {}
func (*FeedbackMessage) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *FeedbackMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeedbackMessage) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *FeedbackMessage) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *FeedbackMessage) GetFeedBack() string {
	if m != nil {
		return m.FeedBack
	}
	return ""
}

func (m *FeedbackMessage) GetFCreateTime() string {
	if m != nil {
		return m.FCreateTime
	}
	return ""
}

func (m *FeedbackMessage) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

// 请求参数
type ReportVideoOperaRequest struct {
	Vid  string `protobuf:"bytes,1,opt,name=vid" json:"vid,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *ReportVideoOperaRequest) Reset()                    { *m = ReportVideoOperaRequest{} }
func (m *ReportVideoOperaRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportVideoOperaRequest) ProtoMessage()               {}
func (*ReportVideoOperaRequest) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *ReportVideoOperaRequest) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *ReportVideoOperaRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// 返回参数
type ReportVideoResponse struct {
	Code string           `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *ReportVideoList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ReportVideoResponse) Reset()                    { *m = ReportVideoResponse{} }
func (m *ReportVideoResponse) String() string            { return proto.CompactTextString(m) }
func (*ReportVideoResponse) ProtoMessage()               {}
func (*ReportVideoResponse) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *ReportVideoResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ReportVideoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ReportVideoResponse) GetData() *ReportVideoList {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReportVideoList struct {
	Data  []*ReportVideoMessage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ReportVideoList) Reset()                    { *m = ReportVideoList{} }
func (m *ReportVideoList) String() string            { return proto.CompactTextString(m) }
func (*ReportVideoList) ProtoMessage()               {}
func (*ReportVideoList) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *ReportVideoList) GetData() []*ReportVideoMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReportVideoList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReportVideoMessage struct {
	Vid         string `protobuf:"bytes,1,opt,name=vid" json:"vid,omitempty"`
	VCreateTime string `protobuf:"bytes,2,opt,name=vCreateTime" json:"vCreateTime,omitempty"`
	Uid         string `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	Reason      string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	ReportTime  string `protobuf:"bytes,5,opt,name=reportTime" json:"reportTime,omitempty"`
	OperaStatus string `protobuf:"bytes,6,opt,name=operaStatus" json:"operaStatus,omitempty"`
	Title       string `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Duration    string `protobuf:"bytes,8,opt,name=duration" json:"duration,omitempty"`
	VideoUrl    string `protobuf:"bytes,9,opt,name=videoUrl" json:"videoUrl,omitempty"`
	VideoCover  string `protobuf:"bytes,10,opt,name=videoCover" json:"videoCover,omitempty"`
	Source      string `protobuf:"bytes,11,opt,name=source" json:"source,omitempty"`
	Status      string `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
	ViewNum     uint32 `protobuf:"varint,13,opt,name=viewNum" json:"viewNum,omitempty"`
	FavorNum    uint32 `protobuf:"varint,14,opt,name=favorNum" json:"favorNum,omitempty"`
	CommentNum  uint32 `protobuf:"varint,15,opt,name=commentNum" json:"commentNum,omitempty"`
}

func (m *ReportVideoMessage) Reset()                    { *m = ReportVideoMessage{} }
func (m *ReportVideoMessage) String() string            { return proto.CompactTextString(m) }
func (*ReportVideoMessage) ProtoMessage()               {}
func (*ReportVideoMessage) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *ReportVideoMessage) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *ReportVideoMessage) GetVCreateTime() string {
	if m != nil {
		return m.VCreateTime
	}
	return ""
}

func (m *ReportVideoMessage) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReportVideoMessage) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ReportVideoMessage) GetReportTime() string {
	if m != nil {
		return m.ReportTime
	}
	return ""
}

func (m *ReportVideoMessage) GetOperaStatus() string {
	if m != nil {
		return m.OperaStatus
	}
	return ""
}

func (m *ReportVideoMessage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReportVideoMessage) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *ReportVideoMessage) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *ReportVideoMessage) GetVideoCover() string {
	if m != nil {
		return m.VideoCover
	}
	return ""
}

func (m *ReportVideoMessage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ReportVideoMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReportVideoMessage) GetViewNum() uint32 {
	if m != nil {
		return m.ViewNum
	}
	return 0
}

func (m *ReportVideoMessage) GetFavorNum() uint32 {
	if m != nil {
		return m.FavorNum
	}
	return 0
}

func (m *ReportVideoMessage) GetCommentNum() uint32 {
	if m != nil {
		return m.CommentNum
	}
	return 0
}

func init() {
	proto.RegisterType((*ReportCommentOperaRequest)(nil), "api.ReportCommentOperaRequest")
	proto.RegisterType((*ReportCommentResponse)(nil), "api.ReportCommentResponse")
	proto.RegisterType((*ReportCommentList)(nil), "api.ReportCommentList")
	proto.RegisterType((*ReportCommentMessage)(nil), "api.ReportCommentMessage")
	proto.RegisterType((*FeedbackListResponse)(nil), "api.FeedbackListResponse")
	proto.RegisterType((*FeedbackList)(nil), "api.FeedbackList")
	proto.RegisterType((*FeedbackMessage)(nil), "api.FeedbackMessage")
	proto.RegisterType((*ReportVideoOperaRequest)(nil), "api.ReportVideoOperaRequest")
	proto.RegisterType((*ReportVideoResponse)(nil), "api.ReportVideoResponse")
	proto.RegisterType((*ReportVideoList)(nil), "api.ReportVideoList")
	proto.RegisterType((*ReportVideoMessage)(nil), "api.ReportVideoMessage")
}

func init() { proto.RegisterFile("userService.proto", fileDescriptor11) }

var fileDescriptor11 = []byte{
	// 753 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x4d, 0x4f, 0xdc, 0x30,
	0x10, 0xd5, 0x7e, 0x02, 0xb3, 0xcb, 0x97, 0x59, 0x20, 0xac, 0x2a, 0xb4, 0x5a, 0xa9, 0xd2, 0xaa,
	0x55, 0x39, 0xd0, 0x7b, 0x5b, 0xb1, 0x6a, 0x25, 0xa4, 0x96, 0x8a, 0x00, 0x55, 0xaf, 0x21, 0x19,
	0xa8, 0x05, 0x89, 0x53, 0xc7, 0x49, 0xc5, 0xcf, 0xe9, 0xad, 0x7f, 0xac, 0xf7, 0xfe, 0x84, 0xca,
	0xe3, 0x24, 0xeb, 0x24, 0x20, 0xe0, 0xe6, 0x79, 0x63, 0xbf, 0x4c, 0x66, 0xde, 0xb3, 0x61, 0x33,
	0x4d, 0x50, 0x9e, 0xa1, 0xcc, 0xb8, 0x8f, 0x07, 0xb1, 0x14, 0x4a, 0xb0, 0x8e, 0x17, 0xf3, 0xf1,
	0xd0, 0x17, 0x61, 0x28, 0x22, 0x03, 0x4d, 0x4f, 0x61, 0xcf, 0xc5, 0x58, 0x48, 0x35, 0x17, 0x61,
	0x88, 0x91, 0xfa, 0x1a, 0xa3, 0xf4, 0x5c, 0xfc, 0x99, 0x62, 0xa2, 0xd8, 0x1a, 0xb4, 0x79, 0xe0,
	0xb4, 0x26, 0xad, 0xd9, 0x8a, 0xdb, 0xe6, 0x01, 0xdb, 0x80, 0x8e, 0xcf, 0x03, 0xa7, 0x4d, 0x80,
	0x5e, 0x32, 0x06, 0x5d, 0x75, 0x17, 0xa3, 0xd3, 0x21, 0x88, 0xd6, 0x53, 0x0e, 0xdb, 0x15, 0x4a,
	0x17, 0x93, 0x58, 0x44, 0x09, 0xea, 0xcd, 0xbe, 0x08, 0x30, 0x27, 0xa4, 0xb5, 0xa6, 0x0c, 0x93,
	0xeb, 0x82, 0x32, 0x4c, 0xae, 0xd9, 0x2b, 0xe8, 0x06, 0x9e, 0xf2, 0x88, 0x72, 0x70, 0xb8, 0x73,
	0xe0, 0xc5, 0xfc, 0xa0, 0xc2, 0xf7, 0x99, 0x27, 0xca, 0xa5, 0x3d, 0xd3, 0xef, 0xb0, 0xd9, 0x48,
	0xb1, 0x37, 0x39, 0x41, 0x6b, 0xd2, 0x99, 0x0d, 0x0e, 0xf7, 0x9a, 0x04, 0x5f, 0x30, 0x49, 0xbc,
	0x6b, 0x34, 0x1c, 0x6c, 0x04, 0x3d, 0x5f, 0xa4, 0x91, 0xa2, 0x1a, 0xba, 0xae, 0x09, 0xa6, 0xff,
	0xda, 0x30, 0xba, 0xef, 0xd0, 0x7d, 0x3d, 0x49, 0x17, 0x3d, 0x49, 0x79, 0xc0, 0xc6, 0xb0, 0x1c,
	0xa0, 0xee, 0xfa, 0x71, 0x90, 0xf7, 0xa5, 0x8c, 0x8b, 0x0e, 0x76, 0x17, 0x1d, 0x9c, 0xc2, 0x50,
	0xd2, 0x77, 0x5c, 0xf4, 0x12, 0x11, 0x39, 0x3d, 0x4a, 0x55, 0x30, 0x36, 0x81, 0x81, 0xd0, 0x73,
	0x39, 0x53, 0x9e, 0x4a, 0x13, 0xa7, 0x4f, 0x5b, 0x6c, 0x88, 0xed, 0x03, 0x98, 0x13, 0xe7, 0x3c,
	0x44, 0x67, 0x89, 0x36, 0x58, 0x88, 0xfe, 0x6e, 0xc6, 0x03, 0x67, 0xd9, 0x7c, 0x37, 0xe3, 0x01,
	0x73, 0x60, 0xc9, 0x17, 0x91, 0xc2, 0x48, 0x39, 0x2b, 0x84, 0x16, 0xa1, 0xae, 0xdf, 0x17, 0x19,
	0xca, 0x0b, 0x79, 0xeb, 0x80, 0xa9, 0xbf, 0x88, 0x75, 0x2e, 0xe3, 0x01, 0x0a, 0x9d, 0x1b, 0x98,
	0x5c, 0x11, 0xeb, 0xf1, 0x46, 0x5e, 0x88, 0xce, 0xd0, 0x8c, 0x57, 0xaf, 0x75, 0x73, 0xe3, 0x1f,
	0x42, 0x09, 0x67, 0x95, 0x40, 0x13, 0xe4, 0x68, 0x84, 0xce, 0x5a, 0x89, 0x46, 0x38, 0xf5, 0x61,
	0xf4, 0x09, 0x31, 0xb8, 0xf4, 0xfc, 0x1b, 0x1a, 0xf1, 0xf3, 0x64, 0xf3, 0xb2, 0x22, 0x9b, 0x4d,
	0x9a, 0x7a, 0x85, 0xce, 0x28, 0xe6, 0x04, 0x86, 0x36, 0xca, 0x66, 0x15, 0xb1, 0x8c, 0x2a, 0xc7,
	0x9e, 0xa2, 0x93, 0xdf, 0x2d, 0x58, 0xaf, 0xed, 0x2f, 0x1b, 0xd1, 0x6a, 0x34, 0x22, 0xc2, 0xbc,
	0x64, 0x13, 0x2c, 0xda, 0xd3, 0xb1, 0xdb, 0x33, 0x86, 0xe5, 0x2b, 0xc4, 0xe0, 0xc8, 0xf3, 0x6f,
	0x72, 0xa5, 0x94, 0xb1, 0x96, 0xc2, 0xd5, 0x5c, 0xa2, 0xa7, 0x90, 0x26, 0x6d, 0xd4, 0x62, 0x43,
	0x85, 0x20, 0xfb, 0xa5, 0x20, 0xa7, 0xef, 0x61, 0xd7, 0x48, 0xf9, 0x9b, 0x1e, 0x55, 0xc5, 0xe1,
	0xb9, 0x2e, 0x5a, 0x0b, 0x5d, 0x14, 0x8e, 0x6e, 0x5b, 0x8e, 0x46, 0xd8, 0xb2, 0x08, 0x9e, 0x39,
	0x98, 0x59, 0x65, 0x30, 0x23, 0xcb, 0x8e, 0xc4, 0x66, 0xcd, 0xe6, 0x1c, 0xd6, 0x6b, 0x09, 0xf6,
	0xba, 0x32, 0x9e, 0xdd, 0xfa, 0xe1, 0xa7, 0x4c, 0xe8, 0x4f, 0x07, 0x58, 0xf3, 0xc8, 0x3d, 0x7f,
	0x3e, 0x81, 0x41, 0x66, 0xb5, 0xd6, 0xfc, 0x82, 0x0d, 0x15, 0xad, 0xed, 0x2c, 0xbc, 0xbe, 0x03,
	0x7d, 0x69, 0x7c, 0x6b, 0x06, 0x95, 0x47, 0x35, 0x3f, 0xf6, 0x1a, 0x7e, 0x7c, 0xdc, 0xd1, 0x23,
	0xe8, 0x29, 0xae, 0x6e, 0x0b, 0x33, 0x9b, 0x80, 0xee, 0x96, 0x54, 0x7a, 0x8a, 0x8b, 0x28, 0x37,
	0x73, 0x19, 0x57, 0xbc, 0xb9, 0x52, 0xf3, 0xe6, 0x3e, 0x00, 0xad, 0xe7, 0xda, 0xc8, 0xb9, 0xab,
	0x2d, 0x44, 0xff, 0x47, 0x22, 0x52, 0xe9, 0x63, 0xee, 0xea, 0x3c, 0x22, 0xdc, 0x94, 0x38, 0xcc,
	0x71, 0x53, 0x9d, 0x03, 0x4b, 0x19, 0xc7, 0x5f, 0x27, 0x69, 0x48, 0xce, 0x5e, 0x75, 0x8b, 0x90,
	0xc4, 0xeb, 0x65, 0x42, 0xea, 0xd4, 0x1a, 0xa5, 0xca, 0x58, 0x57, 0xe1, 0x9b, 0xdb, 0x54, 0x67,
	0xd7, 0x29, 0x6b, 0x21, 0x87, 0x7f, 0xdb, 0x30, 0xb8, 0x58, 0xbc, 0x5a, 0xec, 0x1d, 0x0c, 0xe4,
	0x62, 0x72, 0x6c, 0x9b, 0xc6, 0x7f, 0x9a, 0xa2, 0xbc, 0x33, 0x17, 0x04, 0x69, 0x78, 0xec, 0xd4,
	0x55, 0x51, 0x0a, 0xf4, 0x23, 0x6c, 0xc8, 0x9a, 0xf0, 0xd9, 0x8b, 0xfa, 0x6e, 0xdb, 0x0f, 0xe3,
	0x2d, 0xca, 0xce, 0xe9, 0x85, 0x2c, 0x69, 0x3e, 0xc0, 0xf0, 0xca, 0xbe, 0x33, 0x1e, 0xa8, 0x63,
	0xaf, 0x79, 0xe7, 0x14, 0x0c, 0x47, 0xb0, 0x2a, 0xed, 0xc7, 0xe4, 0x21, 0x8a, 0x71, 0xf3, 0xb1,
	0x2a, 0x39, 0x8e, 0x81, 0xc9, 0xc6, 0x4b, 0xcd, 0xf6, 0x9b, 0x27, 0x1e, 0xfd, 0xa1, 0xcb, 0x3e,
	0xbd, 0xfd, 0x6f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x14, 0x96, 0x2d, 0x23, 0x08, 0x00,
	0x00,
}
