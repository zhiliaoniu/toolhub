// Code generated by protoc-gen-go. DO NOT EDIT.
// source: videoService.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type QuestionListResponse struct {
	Code string        `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *QuestionList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *QuestionListResponse) Reset()                    { *m = QuestionListResponse{} }
func (m *QuestionListResponse) String() string            { return proto.CompactTextString(m) }
func (*QuestionListResponse) ProtoMessage()               {}
func (*QuestionListResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *QuestionListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *QuestionListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QuestionListResponse) GetData() *QuestionList {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuestionList struct {
	Data  []*Question `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64      `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *QuestionList) Reset()                    { *m = QuestionList{} }
func (m *QuestionList) String() string            { return proto.CompactTextString(m) }
func (*QuestionList) ProtoMessage()               {}
func (*QuestionList) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *QuestionList) GetData() []*Question {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *QuestionList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetQuestionResponse struct {
	Code string    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *Question `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *GetQuestionResponse) Reset()                    { *m = GetQuestionResponse{} }
func (m *GetQuestionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetQuestionResponse) ProtoMessage()               {}
func (*GetQuestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *GetQuestionResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *GetQuestionResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetQuestionResponse) GetData() *Question {
	if m != nil {
		return m.Data
	}
	return nil
}

type AuditVideoOfflineReq struct {
	Data []*Video `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *AuditVideoOfflineReq) Reset()                    { *m = AuditVideoOfflineReq{} }
func (m *AuditVideoOfflineReq) String() string            { return proto.CompactTextString(m) }
func (*AuditVideoOfflineReq) ProtoMessage()               {}
func (*AuditVideoOfflineReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *AuditVideoOfflineReq) GetData() []*Video {
	if m != nil {
		return m.Data
	}
	return nil
}

type TopicListResponse struct {
	Code string     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *TopicList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TopicListResponse) Reset()                    { *m = TopicListResponse{} }
func (m *TopicListResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicListResponse) ProtoMessage()               {}
func (*TopicListResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *TopicListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicListResponse) GetData() *TopicList {
	if m != nil {
		return m.Data
	}
	return nil
}

type TopicList struct {
	Data  []*Topic `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *TopicList) Reset()                    { *m = TopicList{} }
func (m *TopicList) String() string            { return proto.CompactTextString(m) }
func (*TopicList) ProtoMessage()               {}
func (*TopicList) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *TopicList) GetData() []*Topic {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TopicList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TopicInfoResponse struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *Topic `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TopicInfoResponse) Reset()                    { *m = TopicInfoResponse{} }
func (m *TopicInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicInfoResponse) ProtoMessage()               {}
func (*TopicInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *TopicInfoResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicInfoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicInfoResponse) GetData() *Topic {
	if m != nil {
		return m.Data
	}
	return nil
}

type CommentModifyStateReq struct {
	Cids  []string `protobuf:"bytes,1,rep,name=cids" json:"cids,omitempty"`
	State string   `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
}

func (m *CommentModifyStateReq) Reset()                    { *m = CommentModifyStateReq{} }
func (m *CommentModifyStateReq) String() string            { return proto.CompactTextString(m) }
func (*CommentModifyStateReq) ProtoMessage()               {}
func (*CommentModifyStateReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *CommentModifyStateReq) GetCids() []string {
	if m != nil {
		return m.Cids
	}
	return nil
}

func (m *CommentModifyStateReq) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type CommentInfoResponse struct {
	Code string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *Comment `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *CommentInfoResponse) Reset()                    { *m = CommentInfoResponse{} }
func (m *CommentInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*CommentInfoResponse) ProtoMessage()               {}
func (*CommentInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *CommentInfoResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CommentInfoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CommentInfoResponse) GetData() *Comment {
	if m != nil {
		return m.Data
	}
	return nil
}

type CommentAddReq struct {
	Vid      string   `protobuf:"bytes,1,opt,name=vid" json:"vid,omitempty"`
	Comments []string `protobuf:"bytes,2,rep,name=comments" json:"comments,omitempty"`
}

func (m *CommentAddReq) Reset()                    { *m = CommentAddReq{} }
func (m *CommentAddReq) String() string            { return proto.CompactTextString(m) }
func (*CommentAddReq) ProtoMessage()               {}
func (*CommentAddReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *CommentAddReq) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *CommentAddReq) GetComments() []string {
	if m != nil {
		return m.Comments
	}
	return nil
}

type VideoReviewReq struct {
	Vid      string `protobuf:"bytes,1,opt,name=vid" json:"vid,omitempty"`
	OpStatus string `protobuf:"bytes,2,opt,name=op_status,json=opStatus" json:"op_status,omitempty"`
}

func (m *VideoReviewReq) Reset()                    { *m = VideoReviewReq{} }
func (m *VideoReviewReq) String() string            { return proto.CompactTextString(m) }
func (*VideoReviewReq) ProtoMessage()               {}
func (*VideoReviewReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *VideoReviewReq) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *VideoReviewReq) GetOpStatus() string {
	if m != nil {
		return m.OpStatus
	}
	return ""
}

type GetTopicRuleReq struct {
	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId" json:"topic_id,omitempty"`
}

func (m *GetTopicRuleReq) Reset()                    { *m = GetTopicRuleReq{} }
func (m *GetTopicRuleReq) String() string            { return proto.CompactTextString(m) }
func (*GetTopicRuleReq) ProtoMessage()               {}
func (*GetTopicRuleReq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *GetTopicRuleReq) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

type GetTopicRuleResponse struct {
	Code string      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data []*RuleName `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *GetTopicRuleResponse) Reset()                    { *m = GetTopicRuleResponse{} }
func (m *GetTopicRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTopicRuleResponse) ProtoMessage()               {}
func (*GetTopicRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{12} }

func (m *GetTopicRuleResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *GetTopicRuleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetTopicRuleResponse) GetData() []*RuleName {
	if m != nil {
		return m.Data
	}
	return nil
}

type RuleName struct {
	RuleId   string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId" json:"rule_id,omitempty"`
	RuleName string `protobuf:"bytes,2,opt,name=rule_name,json=ruleName" json:"rule_name,omitempty"`
}

func (m *RuleName) Reset()                    { *m = RuleName{} }
func (m *RuleName) String() string            { return proto.CompactTextString(m) }
func (*RuleName) ProtoMessage()               {}
func (*RuleName) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *RuleName) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *RuleName) GetRuleName() string {
	if m != nil {
		return m.RuleName
	}
	return ""
}

func init() {
	proto.RegisterType((*QuestionListResponse)(nil), "api.QuestionListResponse")
	proto.RegisterType((*QuestionList)(nil), "api.QuestionList")
	proto.RegisterType((*GetQuestionResponse)(nil), "api.GetQuestionResponse")
	proto.RegisterType((*AuditVideoOfflineReq)(nil), "api.AuditVideoOfflineReq")
	proto.RegisterType((*TopicListResponse)(nil), "api.TopicListResponse")
	proto.RegisterType((*TopicList)(nil), "api.TopicList")
	proto.RegisterType((*TopicInfoResponse)(nil), "api.TopicInfoResponse")
	proto.RegisterType((*CommentModifyStateReq)(nil), "api.CommentModifyStateReq")
	proto.RegisterType((*CommentInfoResponse)(nil), "api.CommentInfoResponse")
	proto.RegisterType((*CommentAddReq)(nil), "api.CommentAddReq")
	proto.RegisterType((*VideoReviewReq)(nil), "api.VideoReviewReq")
	proto.RegisterType((*GetTopicRuleReq)(nil), "api.GetTopicRuleReq")
	proto.RegisterType((*GetTopicRuleResponse)(nil), "api.GetTopicRuleResponse")
	proto.RegisterType((*RuleName)(nil), "api.RuleName")
}

func init() { proto.RegisterFile("videoService.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 791 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xf1, 0x4f, 0xdb, 0x3a,
	0x10, 0x56, 0x29, 0x0f, 0xda, 0x4b, 0x29, 0xc5, 0x2d, 0xef, 0x95, 0x3e, 0x09, 0x95, 0x48, 0x4f,
	0xe2, 0x69, 0x53, 0x27, 0x3a, 0xc6, 0x26, 0xb4, 0x09, 0x3a, 0x98, 0x2a, 0xa4, 0x8d, 0x69, 0x65,
	0x43, 0xda, 0x0f, 0x0c, 0x65, 0xb5, 0x3b, 0x59, 0x4a, 0xe2, 0xd0, 0xa4, 0x9d, 0xf8, 0xf7, 0xf6,
	0x97, 0x4d, 0x3e, 0x3b, 0x4d, 0x4c, 0xd3, 0x8e, 0xf6, 0xb7, 0xf8, 0x7c, 0xdf, 0xdd, 0xe7, 0xb3,
	0xef, 0xbb, 0x00, 0x19, 0x73, 0xca, 0xc4, 0x15, 0x1b, 0x8e, 0x79, 0x9f, 0xb5, 0x82, 0xa1, 0x88,
	0x04, 0xc9, 0x3b, 0x01, 0x6f, 0x94, 0xfa, 0xc2, 0xf3, 0x84, 0xaf, 0x4c, 0x76, 0x1f, 0x6a, 0x9f,
	0x46, 0x2c, 0x8c, 0xb8, 0xf0, 0xdf, 0xf3, 0x30, 0xea, 0xb1, 0x30, 0x10, 0x7e, 0xc8, 0x08, 0x81,
	0xd5, 0xbe, 0xa0, 0xac, 0x9e, 0x6b, 0xe6, 0xf6, 0x8b, 0x3d, 0xfc, 0x26, 0x15, 0xc8, 0x7b, 0xe1,
	0x8f, 0xfa, 0x0a, 0x9a, 0xe4, 0x27, 0xf9, 0x0f, 0x56, 0xa9, 0x13, 0x39, 0xf5, 0x7c, 0x33, 0xb7,
	0x6f, 0xb5, 0xb7, 0x5a, 0x4e, 0xc0, 0x5b, 0x46, 0x38, 0xdc, 0xb6, 0xbb, 0x50, 0x4a, 0x5b, 0xc9,
	0x9e, 0x86, 0xe5, 0x9a, 0xf9, 0x7d, 0xab, 0xbd, 0x61, 0xc0, 0x14, 0x84, 0xd4, 0xe0, 0xaf, 0xbe,
	0x18, 0xf9, 0x11, 0x66, 0x5b, 0xed, 0xa9, 0x85, 0xfd, 0x0d, 0xaa, 0x5d, 0x16, 0x4d, 0x5c, 0x17,
	0x23, 0xbb, 0x67, 0x90, 0xcd, 0xca, 0x6a, 0x1f, 0x41, 0xad, 0x33, 0xa2, 0x3c, 0xba, 0x96, 0xb5,
	0xfb, 0x38, 0x18, 0xb8, 0xdc, 0x67, 0x3d, 0x76, 0x47, 0x76, 0x0d, 0xc2, 0x80, 0x50, 0xf4, 0xd1,
	0xb8, 0x1b, 0xd8, 0xfa, 0x2c, 0x02, 0xde, 0x5f, 0xa2, 0x84, 0xb6, 0xc1, 0xaa, 0x8c, 0xa1, 0x93,
	0x58, 0x2a, 0x7c, 0x07, 0x8a, 0x13, 0x53, 0x26, 0x17, 0xdc, 0x9d, 0x5b, 0xb9, 0xaf, 0x9a, 0xe1,
	0x85, 0x3f, 0x10, 0x0b, 0x32, 0xdc, 0x35, 0x18, 0x4e, 0x25, 0xb4, 0x3b, 0xb0, 0x7d, 0x26, 0x3c,
	0x8f, 0xf9, 0xd1, 0x07, 0x41, 0xf9, 0xe0, 0xfe, 0x2a, 0x72, 0x22, 0xac, 0x9a, 0x0c, 0xcf, 0x69,
	0x88, 0x4c, 0x65, 0x78, 0x4e, 0x43, 0xc9, 0x2e, 0x94, 0xfb, 0x3a, 0x81, 0x5a, 0xd8, 0x37, 0x50,
	0xd5, 0x21, 0x96, 0xe0, 0xd7, 0x34, 0xf8, 0x95, 0x90, 0x9f, 0x8e, 0xa6, 0x19, 0xbe, 0x81, 0x0d,
	0x6d, 0xe8, 0x50, 0x2a, 0x99, 0x55, 0x20, 0x3f, 0xe6, 0x54, 0xc7, 0x95, 0x9f, 0xa4, 0x01, 0x85,
	0xbe, 0x72, 0x09, 0xeb, 0x2b, 0xc8, 0x77, 0xb2, 0xb6, 0x4f, 0xa0, 0xac, 0x2e, 0x9b, 0x8d, 0x39,
	0xfb, 0x99, 0x8d, 0xff, 0x17, 0x8a, 0x22, 0xb8, 0x95, 0xa7, 0x19, 0x85, 0x9a, 0x5c, 0x41, 0x04,
	0x57, 0xb8, 0xb6, 0x9f, 0xc2, 0x66, 0x97, 0x45, 0xaa, 0x66, 0x23, 0x17, 0x6b, 0xb3, 0x03, 0x85,
	0x48, 0xae, 0x6f, 0x27, 0x61, 0xd6, 0x71, 0x7d, 0x41, 0xed, 0x5b, 0xa8, 0x99, 0xde, 0x4b, 0xbe,
	0xf2, 0xa4, 0xb7, 0x64, 0x98, 0x4b, 0xc7, 0x63, 0xba, 0x1c, 0xa7, 0x50, 0x88, 0x2d, 0xe4, 0x1f,
	0x58, 0x1f, 0x8e, 0x5c, 0x96, 0xd0, 0x58, 0x93, 0xcb, 0x0b, 0x3c, 0x10, 0x6e, 0xf8, 0x8e, 0x17,
	0x5f, 0x56, 0x61, 0xa8, 0x51, 0xed, 0x5f, 0x25, 0x28, 0x5d, 0xa7, 0xf4, 0x85, 0x1c, 0x43, 0x11,
	0xd7, 0xf8, 0x42, 0xb7, 0xe3, 0xd6, 0x1a, 0xde, 0xab, 0x86, 0xb8, 0x93, 0x5d, 0xd6, 0xf8, 0x3b,
	0x69, 0x1b, 0xa3, 0x4f, 0x5a, 0x60, 0xa1, 0x51, 0xbd, 0x1e, 0x92, 0xea, 0xae, 0x46, 0x75, 0x72,
	0x99, 0xa9, 0x6e, 0x3f, 0x7d, 0xa0, 0x26, 0x33, 0xd2, 0xed, 0x4c, 0xab, 0x51, 0x1c, 0xe1, 0x00,
	0xac, 0x0e, 0xa5, 0xf1, 0x16, 0x31, 0xa5, 0x20, 0x3b, 0xe9, 0x01, 0x58, 0xe7, 0xcc, 0x5d, 0x08,
	0x72, 0x04, 0x56, 0x4a, 0xac, 0x1e, 0x42, 0xea, 0xb8, 0xcc, 0x52, 0xb3, 0x43, 0x28, 0xab, 0x52,
	0x2c, 0x94, 0xed, 0x7f, 0x58, 0xeb, 0xf2, 0x31, 0xfb, 0x12, 0xfc, 0xb9, 0x80, 0x27, 0x50, 0x4e,
	0x54, 0x6e, 0x99, 0x1b, 0x3b, 0x83, 0xad, 0x29, 0x99, 0x24, 0xaa, 0xde, 0x59, 0xf2, 0x99, 0xcd,
	0xe2, 0x2d, 0x54, 0x12, 0xe7, 0x4b, 0x31, 0xf4, 0x1c, 0x77, 0xe1, 0x18, 0x4f, 0xa0, 0xd0, 0xa1,
	0x14, 0x5b, 0x85, 0xa4, 0x84, 0x29, 0xdb, 0xf9, 0x38, 0xad, 0xa2, 0x73, 0x4f, 0x3c, 0xad, 0xe5,
	0xcf, 0x34, 0x56, 0xca, 0x93, 0x91, 0x29, 0x05, 0x30, 0xa4, 0xab, 0x05, 0x16, 0x1a, 0x8d, 0x47,
	0x3d, 0x87, 0xdc, 0x0b, 0xd8, 0xc0, 0xdd, 0x0e, 0xa5, 0x78, 0x72, 0xb2, 0x99, 0x20, 0xe6, 0x5c,
	0x65, 0x0c, 0x3b, 0x67, 0xee, 0x22, 0xb0, 0x57, 0x50, 0x49, 0x5c, 0x34, 0xc5, 0xc7, 0x21, 0x4f,
	0xa0, 0x9c, 0xb8, 0x2c, 0xf3, 0x76, 0x5e, 0x83, 0xa5, 0xb5, 0x18, 0xd1, 0xd5, 0xb4, 0x5c, 0x6b,
	0xbc, 0xee, 0x0d, 0xc3, 0xa8, 0xd1, 0xef, 0x80, 0x4c, 0xcf, 0x1a, 0xd2, 0x48, 0xfb, 0x9b, 0x43,
	0x28, 0xfb, 0x14, 0xed, 0xc9, 0x40, 0xd0, 0x87, 0x37, 0xa6, 0xc6, 0xac, 0x52, 0x5b, 0xa9, 0x19,
	0xf5, 0x00, 0x61, 0x30, 0x36, 0x1e, 0xc2, 0x01, 0x94, 0xe2, 0x61, 0xc4, 0x02, 0xf7, 0x91, 0x99,
	0x20, 0x19, 0x57, 0x84, 0xa4, 0x01, 0x6a, 0x7e, 0x65, 0xc3, 0x5e, 0x6a, 0x1d, 0x55, 0x63, 0x4a,
	0x57, 0xd6, 0x1c, 0x5c, 0xb3, 0xee, 0xb4, 0x94, 0x1e, 0x38, 0xa4, 0x16, 0x4b, 0x53, 0x7a, 0x62,
	0x69, 0x3d, 0xcd, 0x9c, 0x4c, 0x87, 0x49, 0x00, 0x1c, 0x2a, 0xea, 0x8c, 0x97, 0x23, 0xd7, 0x95,
	0xc0, 0x19, 0x3d, 0xf5, 0x7d, 0x0d, 0xff, 0x40, 0x9f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x46,
	0x55, 0x57, 0x5b, 0xaa, 0x0a, 0x00, 0x00,
}
