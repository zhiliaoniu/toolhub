// Code generated by protoc-gen-go. DO NOT EDIT.
// source: report.proto

package budao

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VideoBase struct {
	VideoId   string `protobuf:"bytes,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	TraceId   string `protobuf:"bytes,2,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	ChannelId string `protobuf:"bytes,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Payload   string `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
}

func (m *VideoBase) Reset()                    { *m = VideoBase{} }
func (m *VideoBase) String() string            { return proto.CompactTextString(m) }
func (*VideoBase) ProtoMessage()               {}
func (*VideoBase) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *VideoBase) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

func (m *VideoBase) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *VideoBase) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *VideoBase) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type VideoClick struct {
	Base *VideoBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *VideoClick) Reset()                    { *m = VideoClick{} }
func (m *VideoClick) String() string            { return proto.CompactTextString(m) }
func (*VideoClick) ProtoMessage()               {}
func (*VideoClick) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *VideoClick) GetBase() *VideoBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type VideoProgress struct {
	Base         *VideoBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Duration     uint32     `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	PlayDuration float32    `protobuf:"fixed32,3,opt,name=play_duration,json=playDuration" json:"play_duration,omitempty"`
}

func (m *VideoProgress) Reset()                    { *m = VideoProgress{} }
func (m *VideoProgress) String() string            { return proto.CompactTextString(m) }
func (*VideoProgress) ProtoMessage()               {}
func (*VideoProgress) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *VideoProgress) GetBase() *VideoBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *VideoProgress) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *VideoProgress) GetPlayDuration() float32 {
	if m != nil {
		return m.PlayDuration
	}
	return 0
}

type VideoExposure struct {
	Base *VideoBase `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
}

func (m *VideoExposure) Reset()                    { *m = VideoExposure{} }
func (m *VideoExposure) String() string            { return proto.CompactTextString(m) }
func (*VideoExposure) ProtoMessage()               {}
func (*VideoExposure) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *VideoExposure) GetBase() *VideoBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type BannerClick struct {
	BannerId string `protobuf:"bytes,1,opt,name=banner_id,json=bannerId" json:"banner_id,omitempty"`
}

func (m *BannerClick) Reset()                    { *m = BannerClick{} }
func (m *BannerClick) String() string            { return proto.CompactTextString(m) }
func (*BannerClick) ProtoMessage()               {}
func (*BannerClick) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *BannerClick) GetBannerId() string {
	if m != nil {
		return m.BannerId
	}
	return ""
}

type ReportStatisDataRequest struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*ReportStatisDataRequest_Click
	//	*ReportStatisDataRequest_Progress
	//	*ReportStatisDataRequest_Exposure
	//	*ReportStatisDataRequest_BannerClick
	Type isReportStatisDataRequest_Type `protobuf_oneof:"Type"`
}

func (m *ReportStatisDataRequest) Reset()                    { *m = ReportStatisDataRequest{} }
func (m *ReportStatisDataRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportStatisDataRequest) ProtoMessage()               {}
func (*ReportStatisDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

type isReportStatisDataRequest_Type interface {
	isReportStatisDataRequest_Type()
}

type ReportStatisDataRequest_Click struct {
	Click *VideoClick `protobuf:"bytes,2,opt,name=click,oneof"`
}
type ReportStatisDataRequest_Progress struct {
	Progress *VideoProgress `protobuf:"bytes,3,opt,name=progress,oneof"`
}
type ReportStatisDataRequest_Exposure struct {
	Exposure *VideoExposure `protobuf:"bytes,4,opt,name=exposure,oneof"`
}
type ReportStatisDataRequest_BannerClick struct {
	BannerClick *BannerClick `protobuf:"bytes,5,opt,name=banner_click,json=bannerClick,oneof"`
}

func (*ReportStatisDataRequest_Click) isReportStatisDataRequest_Type()       {}
func (*ReportStatisDataRequest_Progress) isReportStatisDataRequest_Type()    {}
func (*ReportStatisDataRequest_Exposure) isReportStatisDataRequest_Type()    {}
func (*ReportStatisDataRequest_BannerClick) isReportStatisDataRequest_Type() {}

func (m *ReportStatisDataRequest) GetType() isReportStatisDataRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ReportStatisDataRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReportStatisDataRequest) GetClick() *VideoClick {
	if x, ok := m.GetType().(*ReportStatisDataRequest_Click); ok {
		return x.Click
	}
	return nil
}

func (m *ReportStatisDataRequest) GetProgress() *VideoProgress {
	if x, ok := m.GetType().(*ReportStatisDataRequest_Progress); ok {
		return x.Progress
	}
	return nil
}

func (m *ReportStatisDataRequest) GetExposure() *VideoExposure {
	if x, ok := m.GetType().(*ReportStatisDataRequest_Exposure); ok {
		return x.Exposure
	}
	return nil
}

func (m *ReportStatisDataRequest) GetBannerClick() *BannerClick {
	if x, ok := m.GetType().(*ReportStatisDataRequest_BannerClick); ok {
		return x.BannerClick
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReportStatisDataRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReportStatisDataRequest_OneofMarshaler, _ReportStatisDataRequest_OneofUnmarshaler, _ReportStatisDataRequest_OneofSizer, []interface{}{
		(*ReportStatisDataRequest_Click)(nil),
		(*ReportStatisDataRequest_Progress)(nil),
		(*ReportStatisDataRequest_Exposure)(nil),
		(*ReportStatisDataRequest_BannerClick)(nil),
	}
}

func _ReportStatisDataRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReportStatisDataRequest)
	// Type
	switch x := m.Type.(type) {
	case *ReportStatisDataRequest_Click:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Click); err != nil {
			return err
		}
	case *ReportStatisDataRequest_Progress:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Progress); err != nil {
			return err
		}
	case *ReportStatisDataRequest_Exposure:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Exposure); err != nil {
			return err
		}
	case *ReportStatisDataRequest_BannerClick:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BannerClick); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReportStatisDataRequest.Type has unexpected type %T", x)
	}
	return nil
}

func _ReportStatisDataRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReportStatisDataRequest)
	switch tag {
	case 2: // Type.click
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoClick)
		err := b.DecodeMessage(msg)
		m.Type = &ReportStatisDataRequest_Click{msg}
		return true, err
	case 3: // Type.progress
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoProgress)
		err := b.DecodeMessage(msg)
		m.Type = &ReportStatisDataRequest_Progress{msg}
		return true, err
	case 4: // Type.exposure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoExposure)
		err := b.DecodeMessage(msg)
		m.Type = &ReportStatisDataRequest_Exposure{msg}
		return true, err
	case 5: // Type.banner_click
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BannerClick)
		err := b.DecodeMessage(msg)
		m.Type = &ReportStatisDataRequest_BannerClick{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReportStatisDataRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReportStatisDataRequest)
	// Type
	switch x := m.Type.(type) {
	case *ReportStatisDataRequest_Click:
		s := proto.Size(x.Click)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReportStatisDataRequest_Progress:
		s := proto.Size(x.Progress)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReportStatisDataRequest_Exposure:
		s := proto.Size(x.Exposure)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReportStatisDataRequest_BannerClick:
		s := proto.Size(x.BannerClick)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReportStatisDataResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ReportStatisDataResponse) Reset()                    { *m = ReportStatisDataResponse{} }
func (m *ReportStatisDataResponse) String() string            { return proto.CompactTextString(m) }
func (*ReportStatisDataResponse) ProtoMessage()               {}
func (*ReportStatisDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *ReportStatisDataResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReportBatchDataRequest struct {
	Header   *Header          `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Click    []*VideoClick    `protobuf:"bytes,2,rep,name=click" json:"click,omitempty"`
	Progress []*VideoProgress `protobuf:"bytes,3,rep,name=progress" json:"progress,omitempty"`
	Exposure []*VideoExposure `protobuf:"bytes,4,rep,name=exposure" json:"exposure,omitempty"`
}

func (m *ReportBatchDataRequest) Reset()                    { *m = ReportBatchDataRequest{} }
func (m *ReportBatchDataRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportBatchDataRequest) ProtoMessage()               {}
func (*ReportBatchDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *ReportBatchDataRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ReportBatchDataRequest) GetClick() []*VideoClick {
	if m != nil {
		return m.Click
	}
	return nil
}

func (m *ReportBatchDataRequest) GetProgress() []*VideoProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *ReportBatchDataRequest) GetExposure() []*VideoExposure {
	if m != nil {
		return m.Exposure
	}
	return nil
}

type ReportBatchDataResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ReportBatchDataResponse) Reset()                    { *m = ReportBatchDataResponse{} }
func (m *ReportBatchDataResponse) String() string            { return proto.CompactTextString(m) }
func (*ReportBatchDataResponse) ProtoMessage()               {}
func (*ReportBatchDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *ReportBatchDataResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*VideoBase)(nil), "budao.VideoBase")
	proto.RegisterType((*VideoClick)(nil), "budao.VideoClick")
	proto.RegisterType((*VideoProgress)(nil), "budao.VideoProgress")
	proto.RegisterType((*VideoExposure)(nil), "budao.VideoExposure")
	proto.RegisterType((*BannerClick)(nil), "budao.BannerClick")
	proto.RegisterType((*ReportStatisDataRequest)(nil), "budao.ReportStatisDataRequest")
	proto.RegisterType((*ReportStatisDataResponse)(nil), "budao.ReportStatisDataResponse")
	proto.RegisterType((*ReportBatchDataRequest)(nil), "budao.ReportBatchDataRequest")
	proto.RegisterType((*ReportBatchDataResponse)(nil), "budao.ReportBatchDataResponse")
}

func init() { proto.RegisterFile("report.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0xc7, 0xf9, 0x5e, 0x38, 0x40, 0xc4, 0x89, 0x51, 0xc4, 0xec, 0x6a, 0xaa, 0xc6, 0x8f, 0x0b,
	0xb2, 0xa9, 0x31, 0xde, 0x2a, 0xae, 0x09, 0x78, 0x45, 0x06, 0x63, 0x8c, 0x37, 0x9b, 0x69, 0x67,
	0x22, 0x55, 0xe8, 0xd4, 0x99, 0x29, 0x59, 0xf6, 0x39, 0x7c, 0x02, 0x1f, 0xc2, 0xa7, 0xf0, 0xa1,
	0xcc, 0x7c, 0x14, 0x4a, 0xb5, 0xc9, 0xba, 0x97, 0xe7, 0xfc, 0xcf, 0x9f, 0xf3, 0x3f, 0xbf, 0x69,
	0x80, 0x9e, 0x60, 0x09, 0x17, 0x6a, 0x9c, 0x08, 0xae, 0x38, 0x6a, 0x06, 0x29, 0x25, 0x7c, 0xd4,
	0x0b, 0xf9, 0x7a, 0xcd, 0x63, 0xdb, 0xf4, 0x2e, 0xa1, 0xf3, 0x31, 0xa2, 0x8c, 0x4f, 0x88, 0x64,
	0xe8, 0x2e, 0xb4, 0x37, 0xba, 0x38, 0x8f, 0xe8, 0xb0, 0xfa, 0xa0, 0xfa, 0xb4, 0x83, 0x8f, 0x4c,
	0x3d, 0xa3, 0x5a, 0x52, 0x82, 0x84, 0x4c, 0x4b, 0x35, 0x2b, 0x99, 0x7a, 0x46, 0xd1, 0x31, 0x40,
	0xb8, 0x24, 0x71, 0xcc, 0x56, 0x5a, 0xac, 0x1b, 0xb1, 0xe3, 0x3a, 0x33, 0x8a, 0x86, 0x70, 0x94,
	0x90, 0xed, 0x8a, 0x13, 0x3a, 0x6c, 0x58, 0xa3, 0x2b, 0x3d, 0x1f, 0xc0, 0xec, 0x7e, 0xbb, 0x8a,
	0xc2, 0x6f, 0xe8, 0x11, 0x34, 0x02, 0x22, 0x99, 0x59, 0xdc, 0xf5, 0x07, 0x63, 0x93, 0x76, 0xbc,
	0x0b, 0x87, 0x8d, 0xea, 0x6d, 0xa0, 0x6f, 0x5a, 0x73, 0xc1, 0xbf, 0x08, 0x26, 0xe5, 0xd5, 0x6c,
	0x68, 0x04, 0x6d, 0x9a, 0x0a, 0xa2, 0x22, 0x1e, 0x9b, 0xf8, 0x7d, 0xbc, 0xab, 0xd1, 0x43, 0xe8,
	0x27, 0x2b, 0xb2, 0x3d, 0xdf, 0x0d, 0xe8, 0x13, 0x6a, 0xb8, 0xa7, 0x9b, 0x67, 0xae, 0xe7, 0xbd,
	0x74, 0x7b, 0xdf, 0x5d, 0x24, 0x5c, 0xa6, 0x82, 0x5d, 0x31, 0xee, 0x73, 0xe8, 0x4e, 0x34, 0x08,
	0x61, 0x6f, 0xbc, 0x07, 0x9d, 0xc0, 0x94, 0x7b, 0xc2, 0x6d, 0xdb, 0x98, 0x51, 0xef, 0x47, 0x0d,
	0xee, 0x60, 0xf3, 0x60, 0x0b, 0x45, 0x54, 0x24, 0xcf, 0x88, 0x22, 0x98, 0x7d, 0x4f, 0x99, 0x54,
	0xe8, 0x31, 0xb4, 0x96, 0x8c, 0x50, 0x26, 0xdc, 0xbe, 0xbe, 0xdb, 0x37, 0x35, 0x4d, 0xec, 0x44,
	0xf4, 0x0c, 0x9a, 0xa1, 0x5e, 0x64, 0x6e, 0xec, 0xfa, 0x37, 0xf3, 0xa9, 0x4c, 0x82, 0x69, 0x05,
	0xdb, 0x09, 0xe4, 0x43, 0x3b, 0x71, 0x0c, 0xcd, 0xc1, 0x5d, 0xff, 0x56, 0x7e, 0x3a, 0xe3, 0x3b,
	0xad, 0xe0, 0xdd, 0x9c, 0xf6, 0x30, 0x77, 0xbf, 0x79, 0xcb, 0x82, 0x27, 0x63, 0xa3, 0x3d, 0xd9,
	0x1c, 0x7a, 0x05, 0x3d, 0x77, 0xb2, 0x4d, 0xd6, 0x34, 0x3e, 0xe4, 0x7c, 0x39, 0x38, 0xd3, 0x0a,
	0xee, 0x06, 0xfb, 0x72, 0xd2, 0x82, 0xc6, 0x87, 0x6d, 0xc2, 0xbc, 0x37, 0x30, 0xfc, 0x9b, 0x8a,
	0x4c, 0x78, 0x2c, 0x99, 0xc6, 0x22, 0x15, 0x51, 0xa9, 0x2c, 0x60, 0x59, 0x98, 0x26, 0x76, 0xa2,
	0xf7, 0xbb, 0x0a, 0xb7, 0xed, 0x6f, 0x4c, 0x88, 0x0a, 0x97, 0xd7, 0x00, 0xfb, 0x64, 0x0f, 0xb6,
	0xfe, 0x4f, 0xb0, 0x19, 0xd6, 0xd3, 0x03, 0xac, 0xf5, 0x32, 0xac, 0x39, 0xa8, 0xa7, 0x07, 0x50,
	0xeb, 0x65, 0x50, 0xf7, 0x48, 0xbd, 0xd7, 0xd9, 0x77, 0x92, 0xbb, 0xe6, 0xbf, 0x80, 0xf8, 0xbf,
	0xaa, 0xd0, 0x77, 0x50, 0x99, 0xd8, 0x44, 0x21, 0x43, 0x0b, 0x18, 0x14, 0x29, 0xa3, 0x13, 0x67,
	0x2e, 0xf9, 0x28, 0x47, 0xf7, 0x4b, 0x75, 0x97, 0x66, 0x0e, 0x37, 0x0a, 0x41, 0xd1, 0xf1, 0x81,
	0xa7, 0xf8, 0x1c, 0xa3, 0x93, 0x32, 0xd9, 0xfe, 0xe2, 0x64, 0x04, 0x83, 0x90, 0xaf, 0xc7, 0x5f,
	0x2f, 0x2e, 0xc7, 0x49, 0x60, 0x67, 0xe7, 0xd5, 0x9f, 0xb5, 0xfa, 0xfb, 0x4f, 0x9f, 0x83, 0x96,
	0xf9, 0x47, 0x7b, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0x28, 0xca, 0x36, 0x22, 0xf6, 0x04, 0x00,
	0x00,
}
