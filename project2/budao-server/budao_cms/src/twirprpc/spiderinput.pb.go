// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spiderinput.proto

package budao

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InputVideoRequest struct {
	VideoDatas []*VideoData `protobuf:"bytes,1,rep,name=video_datas,json=videoDatas" json:"video_datas,omitempty"`
}

func (m *InputVideoRequest) Reset()                    { *m = InputVideoRequest{} }
func (m *InputVideoRequest) String() string            { return proto.CompactTextString(m) }
func (*InputVideoRequest) ProtoMessage()               {}
func (*InputVideoRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *InputVideoRequest) GetVideoDatas() []*VideoData {
	if m != nil {
		return m.VideoDatas
	}
	return nil
}

type InputCommentRequest struct {
	CommentDatas []*Comment `protobuf:"bytes,1,rep,name=comment_datas,json=commentDatas" json:"comment_datas,omitempty"`
}

func (m *InputCommentRequest) Reset()                    { *m = InputCommentRequest{} }
func (m *InputCommentRequest) String() string            { return proto.CompactTextString(m) }
func (*InputCommentRequest) ProtoMessage()               {}
func (*InputCommentRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *InputCommentRequest) GetCommentDatas() []*Comment {
	if m != nil {
		return m.CommentDatas
	}
	return nil
}

type InputAuditVideoRequest struct {
	VideoDatas []*AuditVideoData `protobuf:"bytes,1,rep,name=video_datas,json=videoDatas" json:"video_datas,omitempty"`
}

func (m *InputAuditVideoRequest) Reset()                    { *m = InputAuditVideoRequest{} }
func (m *InputAuditVideoRequest) String() string            { return proto.CompactTextString(m) }
func (*InputAuditVideoRequest) ProtoMessage()               {}
func (*InputAuditVideoRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *InputAuditVideoRequest) GetVideoDatas() []*AuditVideoData {
	if m != nil {
		return m.VideoDatas
	}
	return nil
}

type InputVideoResponse struct {
	Status *Status           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	MapId  map[string]string `protobuf:"bytes,2,rep,name=map_id,json=mapId" json:"map_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *InputVideoResponse) Reset()                    { *m = InputVideoResponse{} }
func (m *InputVideoResponse) String() string            { return proto.CompactTextString(m) }
func (*InputVideoResponse) ProtoMessage()               {}
func (*InputVideoResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *InputVideoResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InputVideoResponse) GetMapId() map[string]string {
	if m != nil {
		return m.MapId
	}
	return nil
}

type InputCommentResponse struct {
	Status *Status           `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	MapId  map[string]string `protobuf:"bytes,2,rep,name=map_id,json=mapId" json:"map_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *InputCommentResponse) Reset()                    { *m = InputCommentResponse{} }
func (m *InputCommentResponse) String() string            { return proto.CompactTextString(m) }
func (*InputCommentResponse) ProtoMessage()               {}
func (*InputCommentResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *InputCommentResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *InputCommentResponse) GetMapId() map[string]string {
	if m != nil {
		return m.MapId
	}
	return nil
}

type InputAuditVideoResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *InputAuditVideoResponse) Reset()                    { *m = InputAuditVideoResponse{} }
func (m *InputAuditVideoResponse) String() string            { return proto.CompactTextString(m) }
func (*InputAuditVideoResponse) ProtoMessage()               {}
func (*InputAuditVideoResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *InputAuditVideoResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type VideoData struct {
	Source        EVideoSource   `protobuf:"varint,1,opt,name=source,enum=budao.EVideoSource" json:"source,omitempty"`
	Vid           string         `protobuf:"bytes,2,opt,name=vid" json:"vid,omitempty"`
	MediaName     string         `protobuf:"bytes,3,opt,name=media_name,json=mediaName" json:"media_name,omitempty"`
	MediaId       string         `protobuf:"bytes,4,opt,name=media_id,json=mediaId" json:"media_id,omitempty"`
	VideoTitle    string         `protobuf:"bytes,5,opt,name=video_title,json=videoTitle" json:"video_title,omitempty"`
	PlayCount     int64          `protobuf:"varint,6,opt,name=play_count,json=playCount" json:"play_count,omitempty"`
	VideoDuration int32          `protobuf:"varint,7,opt,name=video_duration,json=videoDuration" json:"video_duration,omitempty"`
	ShareUrl      string         `protobuf:"bytes,8,opt,name=share_url,json=shareUrl" json:"share_url,omitempty"`
	VideoCover    string         `protobuf:"bytes,9,opt,name=video_cover,json=videoCover" json:"video_cover,omitempty"`
	VideoWidth    int32          `protobuf:"varint,10,opt,name=video_width,json=videoWidth" json:"video_width,omitempty"`
	VideoHeight   int32          `protobuf:"varint,11,opt,name=video_height,json=videoHeight" json:"video_height,omitempty"`
	SourceType    string         `protobuf:"bytes,12,opt,name=source_type,json=sourceType" json:"source_type,omitempty"`
	PraiseCount   int64          `protobuf:"varint,13,opt,name=praise_count,json=praiseCount" json:"praise_count,omitempty"`
	FavCount      int64          `protobuf:"varint,14,opt,name=fav_count,json=favCount" json:"fav_count,omitempty"`
	ShareCount    int64          `protobuf:"varint,15,opt,name=share_count,json=shareCount" json:"share_count,omitempty"`
	CommentCount  int64          `protobuf:"varint,16,opt,name=comment_count,json=commentCount" json:"comment_count,omitempty"`
	CreateTime    uint64         `protobuf:"varint,17,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	VideoUrl      string         `protobuf:"bytes,18,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	ChannelId     string         `protobuf:"bytes,19,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Topic         string         `protobuf:"bytes,20,opt,name=topic" json:"topic,omitempty"`
	QuestionType  string         `protobuf:"bytes,21,opt,name=question_type,json=questionType" json:"question_type,omitempty"`
	MetaData      string         `protobuf:"bytes,22,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	ParseType     VideoParseRule `protobuf:"varint,23,opt,name=parse_type,json=parseType,enum=budao.VideoParseRule" json:"parse_type,omitempty"`
}

func (m *VideoData) Reset()                    { *m = VideoData{} }
func (m *VideoData) String() string            { return proto.CompactTextString(m) }
func (*VideoData) ProtoMessage()               {}
func (*VideoData) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *VideoData) GetSource() EVideoSource {
	if m != nil {
		return m.Source
	}
	return EVideoSource_E_VideoSource_CRAWL_XIGUA
}

func (m *VideoData) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *VideoData) GetMediaName() string {
	if m != nil {
		return m.MediaName
	}
	return ""
}

func (m *VideoData) GetMediaId() string {
	if m != nil {
		return m.MediaId
	}
	return ""
}

func (m *VideoData) GetVideoTitle() string {
	if m != nil {
		return m.VideoTitle
	}
	return ""
}

func (m *VideoData) GetPlayCount() int64 {
	if m != nil {
		return m.PlayCount
	}
	return 0
}

func (m *VideoData) GetVideoDuration() int32 {
	if m != nil {
		return m.VideoDuration
	}
	return 0
}

func (m *VideoData) GetShareUrl() string {
	if m != nil {
		return m.ShareUrl
	}
	return ""
}

func (m *VideoData) GetVideoCover() string {
	if m != nil {
		return m.VideoCover
	}
	return ""
}

func (m *VideoData) GetVideoWidth() int32 {
	if m != nil {
		return m.VideoWidth
	}
	return 0
}

func (m *VideoData) GetVideoHeight() int32 {
	if m != nil {
		return m.VideoHeight
	}
	return 0
}

func (m *VideoData) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *VideoData) GetPraiseCount() int64 {
	if m != nil {
		return m.PraiseCount
	}
	return 0
}

func (m *VideoData) GetFavCount() int64 {
	if m != nil {
		return m.FavCount
	}
	return 0
}

func (m *VideoData) GetShareCount() int64 {
	if m != nil {
		return m.ShareCount
	}
	return 0
}

func (m *VideoData) GetCommentCount() int64 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *VideoData) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *VideoData) GetVideoUrl() string {
	if m != nil {
		return m.VideoUrl
	}
	return ""
}

func (m *VideoData) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *VideoData) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *VideoData) GetQuestionType() string {
	if m != nil {
		return m.QuestionType
	}
	return ""
}

func (m *VideoData) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func (m *VideoData) GetParseType() VideoParseRule {
	if m != nil {
		return m.ParseType
	}
	return VideoParseRule_PARSE_RULE_XIGUA
}

type Comment struct {
	Source     EVideoSource `protobuf:"varint,1,opt,name=source,enum=budao.EVideoSource" json:"source,omitempty"`
	Vid        string       `protobuf:"bytes,2,opt,name=vid" json:"vid,omitempty"`
	Cid        string       `protobuf:"bytes,3,opt,name=cid" json:"cid,omitempty"`
	Content    string       `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	FavorNum   int64        `protobuf:"varint,5,opt,name=favor_num,json=favorNum" json:"favor_num,omitempty"`
	UserId     string       `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserName   string       `protobuf:"bytes,7,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	UserPhoto  string       `protobuf:"bytes,8,opt,name=user_photo,json=userPhoto" json:"user_photo,omitempty"`
	ReplyNum   int64        `protobuf:"varint,9,opt,name=reply_num,json=replyNum" json:"reply_num,omitempty"`
	IsHot      bool         `protobuf:"varint,10,opt,name=is_hot,json=isHot" json:"is_hot,omitempty"`
	CreateTime uint64       `protobuf:"varint,11,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *Comment) GetSource() EVideoSource {
	if m != nil {
		return m.Source
	}
	return EVideoSource_E_VideoSource_CRAWL_XIGUA
}

func (m *Comment) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *Comment) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetFavorNum() int64 {
	if m != nil {
		return m.FavorNum
	}
	return 0
}

func (m *Comment) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Comment) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Comment) GetUserPhoto() string {
	if m != nil {
		return m.UserPhoto
	}
	return ""
}

func (m *Comment) GetReplyNum() int64 {
	if m != nil {
		return m.ReplyNum
	}
	return 0
}

func (m *Comment) GetIsHot() bool {
	if m != nil {
		return m.IsHot
	}
	return false
}

func (m *Comment) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type AuditVideoData struct {
	PostVid    int64  `protobuf:"varint,1,opt,name=post_vid,json=postVid" json:"post_vid,omitempty"`
	VsourceVid string `protobuf:"bytes,2,opt,name=vsource_vid,json=vsourceVid" json:"vsource_vid,omitempty"`
}

func (m *AuditVideoData) Reset()                    { *m = AuditVideoData{} }
func (m *AuditVideoData) String() string            { return proto.CompactTextString(m) }
func (*AuditVideoData) ProtoMessage()               {}
func (*AuditVideoData) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *AuditVideoData) GetPostVid() int64 {
	if m != nil {
		return m.PostVid
	}
	return 0
}

func (m *AuditVideoData) GetVsourceVid() string {
	if m != nil {
		return m.VsourceVid
	}
	return ""
}

// /
// 训练数据
// /
type TrainArticle struct {
	Source          EVideoSource `protobuf:"varint,1,opt,name=source,enum=budao.EVideoSource" json:"source,omitempty"`
	SourceId        string       `protobuf:"bytes,2,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	SourceGroupId   string       `protobuf:"bytes,3,opt,name=source_group_id,json=sourceGroupId" json:"source_group_id,omitempty"`
	SourceGroupName string       `protobuf:"bytes,4,opt,name=source_group_name,json=sourceGroupName" json:"source_group_name,omitempty"`
	Title           string       `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	IsVideo         bool         `protobuf:"varint,6,opt,name=is_video,json=isVideo" json:"is_video,omitempty"`
}

func (m *TrainArticle) Reset()                    { *m = TrainArticle{} }
func (m *TrainArticle) String() string            { return proto.CompactTextString(m) }
func (*TrainArticle) ProtoMessage()               {}
func (*TrainArticle) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

func (m *TrainArticle) GetSource() EVideoSource {
	if m != nil {
		return m.Source
	}
	return EVideoSource_E_VideoSource_CRAWL_XIGUA
}

func (m *TrainArticle) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *TrainArticle) GetSourceGroupId() string {
	if m != nil {
		return m.SourceGroupId
	}
	return ""
}

func (m *TrainArticle) GetSourceGroupName() string {
	if m != nil {
		return m.SourceGroupName
	}
	return ""
}

func (m *TrainArticle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TrainArticle) GetIsVideo() bool {
	if m != nil {
		return m.IsVideo
	}
	return false
}

type TrainComment struct {
	SourceCid string `protobuf:"bytes,1,opt,name=source_cid,json=sourceCid" json:"source_cid,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserName  string `protobuf:"bytes,4,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	IsHot     bool   `protobuf:"varint,5,opt,name=is_hot,json=isHot" json:"is_hot,omitempty"`
}

func (m *TrainComment) Reset()                    { *m = TrainComment{} }
func (m *TrainComment) String() string            { return proto.CompactTextString(m) }
func (*TrainComment) ProtoMessage()               {}
func (*TrainComment) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

func (m *TrainComment) GetSourceCid() string {
	if m != nil {
		return m.SourceCid
	}
	return ""
}

func (m *TrainComment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TrainComment) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TrainComment) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *TrainComment) GetIsHot() bool {
	if m != nil {
		return m.IsHot
	}
	return false
}

type TrainCommentList struct {
	Source   EVideoSource    `protobuf:"varint,1,opt,name=source,enum=budao.EVideoSource" json:"source,omitempty"`
	SourceId string          `protobuf:"bytes,2,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	Comments []*TrainComment `protobuf:"bytes,3,rep,name=comments" json:"comments,omitempty"`
}

func (m *TrainCommentList) Reset()                    { *m = TrainCommentList{} }
func (m *TrainCommentList) String() string            { return proto.CompactTextString(m) }
func (*TrainCommentList) ProtoMessage()               {}
func (*TrainCommentList) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

func (m *TrainCommentList) GetSource() EVideoSource {
	if m != nil {
		return m.Source
	}
	return EVideoSource_E_VideoSource_CRAWL_XIGUA
}

func (m *TrainCommentList) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *TrainCommentList) GetComments() []*TrainComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func init() {
	proto.RegisterType((*InputVideoRequest)(nil), "budao.InputVideoRequest")
	proto.RegisterType((*InputCommentRequest)(nil), "budao.InputCommentRequest")
	proto.RegisterType((*InputAuditVideoRequest)(nil), "budao.InputAuditVideoRequest")
	proto.RegisterType((*InputVideoResponse)(nil), "budao.InputVideoResponse")
	proto.RegisterType((*InputCommentResponse)(nil), "budao.InputCommentResponse")
	proto.RegisterType((*InputAuditVideoResponse)(nil), "budao.InputAuditVideoResponse")
	proto.RegisterType((*VideoData)(nil), "budao.VideoData")
	proto.RegisterType((*Comment)(nil), "budao.Comment")
	proto.RegisterType((*AuditVideoData)(nil), "budao.AuditVideoData")
	proto.RegisterType((*TrainArticle)(nil), "budao.TrainArticle")
	proto.RegisterType((*TrainComment)(nil), "budao.TrainComment")
	proto.RegisterType((*TrainCommentList)(nil), "budao.TrainCommentList")
}

func init() { proto.RegisterFile("spiderinput.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 1083 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdf, 0x6e, 0xe3, 0xc4,
	0x17, 0x96, 0x93, 0xe6, 0x8f, 0x4f, 0xd2, 0x34, 0x9d, 0xb6, 0x5b, 0x6f, 0xaa, 0xfe, 0x7e, 0x25,
	0xb0, 0xab, 0x0a, 0xa4, 0x22, 0xba, 0x08, 0xad, 0x40, 0x48, 0xac, 0x4a, 0x61, 0x03, 0xcb, 0x52,
	0xb9, 0xa5, 0x5c, 0x70, 0x61, 0xcd, 0xda, 0xd3, 0xcd, 0x08, 0xdb, 0x63, 0x66, 0xc6, 0x41, 0x79,
	0x00, 0x2e, 0xb9, 0xe3, 0x49, 0xb8, 0xe0, 0x86, 0x67, 0xe1, 0x59, 0x40, 0x73, 0x66, 0x52, 0x3b,
	0x4d, 0x8b, 0x54, 0xb1, 0x77, 0x9e, 0xef, 0x9c, 0xf9, 0xce, 0x99, 0x73, 0xbe, 0x39, 0x63, 0xd8,
	0x54, 0x05, 0x4f, 0x98, 0xe4, 0x79, 0x51, 0xea, 0xa3, 0x42, 0x0a, 0x2d, 0x48, 0xeb, 0x55, 0x99,
	0x50, 0x31, 0x1a, 0x68, 0x49, 0x73, 0x75, 0xc5, 0xa4, 0x85, 0x47, 0xfd, 0x58, 0x64, 0x99, 0xc8,
	0xdd, 0x6a, 0x50, 0x50, 0xa9, 0x58, 0x29, 0x53, 0xbb, 0x1e, 0x7f, 0x01, 0x9b, 0x13, 0xc3, 0x71,
	0xc9, 0x13, 0x26, 0x42, 0xf6, 0x53, 0xc9, 0x94, 0x26, 0x1f, 0x40, 0x6f, 0x66, 0xd6, 0x51, 0x42,
	0x35, 0x55, 0x81, 0x77, 0xd0, 0x3c, 0xec, 0x1d, 0x0f, 0x8f, 0x90, 0xff, 0x08, 0x3d, 0x3f, 0xa7,
	0x9a, 0x86, 0x30, 0x5b, 0x7c, 0xaa, 0xf1, 0x57, 0xb0, 0x85, 0x3c, 0x27, 0x22, 0xcb, 0x58, 0xae,
	0x17, 0x4c, 0x4f, 0x60, 0x3d, 0xb6, 0xc8, 0x12, 0xd7, 0xc0, 0x71, 0x2d, 0xbc, 0xfb, 0xce, 0xc9,
	0x72, 0x9d, 0xc1, 0x03, 0xe4, 0x7a, 0x56, 0x26, 0x7c, 0x39, 0xb1, 0x8f, 0x6e, 0x4b, 0x6c, 0xc7,
	0x91, 0x55, 0xee, 0x2b, 0xd9, 0xfd, 0xee, 0x01, 0xa9, 0x1f, 0x53, 0x15, 0x22, 0x57, 0x8c, 0x3c,
	0x82, 0xb6, 0xd2, 0x54, 0x97, 0x86, 0xc9, 0x3b, 0xec, 0x1d, 0xaf, 0x3b, 0xa6, 0x73, 0x04, 0x43,
	0x67, 0x24, 0x9f, 0x40, 0x3b, 0xa3, 0x45, 0xc4, 0x93, 0xa0, 0x81, 0x01, 0xdf, 0x71, 0x6e, 0xab,
	0x8c, 0x47, 0xdf, 0xd0, 0x62, 0x92, 0x9c, 0xe6, 0x5a, 0xce, 0xc3, 0x56, 0x66, 0xbe, 0x47, 0x4f,
	0x01, 0x2a, 0x90, 0x0c, 0xa1, 0xf9, 0x23, 0x9b, 0x63, 0x38, 0x3f, 0x34, 0x9f, 0x64, 0x1b, 0x5a,
	0x33, 0x9a, 0x96, 0x2c, 0x68, 0x20, 0x66, 0x17, 0x1f, 0x37, 0x9e, 0x7a, 0xe3, 0x3f, 0x3c, 0xd8,
	0x5e, 0xae, 0xe9, 0xfd, 0xd2, 0xfe, 0xf4, 0x46, 0xda, 0x8f, 0xeb, 0x69, 0xdf, 0xe0, 0x7c, 0xa3,
	0x89, 0x7f, 0x06, 0xbb, 0x2b, 0xfd, 0xbb, 0x57, 0xea, 0xe3, 0xbf, 0x5b, 0xe0, 0x5f, 0x77, 0x92,
	0xbc, 0x07, 0x6d, 0x25, 0x4a, 0x19, 0x33, 0xdc, 0x34, 0x38, 0xde, 0x72, 0x9b, 0x4e, 0xd1, 0xe5,
	0x1c, 0x4d, 0xa1, 0x73, 0x31, 0x89, 0xce, 0xf0, 0xc8, 0x98, 0xe8, 0x8c, 0x27, 0x64, 0x1f, 0x20,
	0x63, 0x09, 0xa7, 0x51, 0x4e, 0x33, 0x16, 0x34, 0xd1, 0xe0, 0x23, 0xf2, 0x92, 0x66, 0x8c, 0x3c,
	0x84, 0xae, 0x35, 0xf3, 0x24, 0x58, 0x43, 0x63, 0x07, 0xd7, 0x93, 0x84, 0xfc, 0x7f, 0x21, 0x37,
	0xcd, 0x75, 0xca, 0x82, 0x16, 0x5a, 0xad, 0xae, 0x2e, 0x0c, 0x62, 0xa8, 0x8b, 0x94, 0xce, 0xa3,
	0x58, 0x94, 0xb9, 0x0e, 0xda, 0x07, 0xde, 0x61, 0x33, 0xf4, 0x0d, 0x72, 0x62, 0x00, 0xf2, 0x08,
	0x06, 0x4e, 0xae, 0xa5, 0xa4, 0x9a, 0x8b, 0x3c, 0xe8, 0x1c, 0x78, 0x87, 0xad, 0x70, 0xdd, 0x4a,
	0xd3, 0x81, 0x64, 0x0f, 0x7c, 0x35, 0xa5, 0x92, 0x45, 0xa5, 0x4c, 0x83, 0x2e, 0x06, 0xe9, 0x22,
	0xf0, 0x9d, 0x4c, 0xab, 0x1c, 0x62, 0x31, 0x63, 0x32, 0xf0, 0x6b, 0x39, 0x9c, 0x18, 0xa4, 0x72,
	0xf8, 0x99, 0x27, 0x7a, 0x1a, 0x00, 0x46, 0xb0, 0x0e, 0xdf, 0x1b, 0x84, 0xbc, 0x05, 0x7d, 0xeb,
	0x30, 0x65, 0xfc, 0xf5, 0x54, 0x07, 0x3d, 0xf4, 0xb0, 0x9b, 0x9e, 0x23, 0x64, 0x38, 0x6c, 0xf9,
	0x22, 0x3d, 0x2f, 0x58, 0xd0, 0xb7, 0x41, 0x2c, 0x74, 0x31, 0x2f, 0x98, 0xe1, 0x28, 0x24, 0xe5,
	0x8a, 0xb9, 0xa3, 0xae, 0xe3, 0x51, 0x7b, 0x16, 0xb3, 0x87, 0xdd, 0x03, 0xff, 0x8a, 0xce, 0x9c,
	0x7d, 0x80, 0xf6, 0xee, 0x15, 0x9d, 0x59, 0xa3, 0x09, 0x80, 0x47, 0xb4, 0xe6, 0x0d, 0x34, 0x03,
	0x42, 0xd6, 0xe1, 0xed, 0x6a, 0x50, 0x58, 0x97, 0x21, 0xba, 0x2c, 0x06, 0xc3, 0x35, 0x4b, 0x2c,
	0x19, 0xd5, 0x2c, 0xd2, 0x3c, 0x63, 0xc1, 0xe6, 0x81, 0x77, 0xb8, 0x16, 0x82, 0x85, 0x2e, 0x78,
	0xc6, 0x4c, 0x0e, 0xf6, 0xa8, 0xa6, 0x92, 0xc4, 0x56, 0x12, 0x01, 0x53, 0xc9, 0x7d, 0x80, 0x78,
	0x4a, 0xf3, 0x9c, 0xa5, 0xa6, 0xd5, 0x5b, 0x56, 0x07, 0x0e, 0x99, 0x24, 0x46, 0xcf, 0x5a, 0x14,
	0x3c, 0x0e, 0xb6, 0xad, 0x9e, 0x71, 0x61, 0xf2, 0xc2, 0xd1, 0xc3, 0x45, 0x6e, 0x6b, 0xb3, 0x83,
	0xd6, 0xfe, 0x02, 0xc4, 0xea, 0xec, 0x81, 0x9f, 0x31, 0x4d, 0x71, 0x2a, 0x05, 0x0f, 0x6c, 0x58,
	0x03, 0xa0, 0x7a, 0x3f, 0x04, 0xc0, 0x99, 0x6b, 0xb7, 0xef, 0xa2, 0x82, 0x77, 0xea, 0xb3, 0xf4,
	0xcc, 0x58, 0xc3, 0x32, 0x65, 0xa1, 0x8f, 0x8e, 0x86, 0x72, 0xfc, 0x67, 0x03, 0x3a, 0xee, 0x8e,
	0xfe, 0x57, 0xfd, 0x0f, 0xa1, 0x19, 0xf3, 0xc4, 0x09, 0xdf, 0x7c, 0x92, 0x00, 0x3a, 0xb1, 0xc8,
	0x35, 0xcb, 0xf5, 0x42, 0xf1, 0x6e, 0xe9, 0x9a, 0x28, 0x64, 0x94, 0x97, 0x19, 0xea, 0xdd, 0x36,
	0x51, 0xc8, 0x97, 0x65, 0x46, 0x76, 0xa1, 0x53, 0x2a, 0x26, 0x4d, 0xf5, 0xda, 0xb8, 0xad, 0x6d,
	0x96, 0x93, 0xc4, 0xec, 0x42, 0x03, 0x5e, 0xb0, 0x8e, 0x3d, 0xbf, 0x01, 0xf0, 0x7e, 0xed, 0x03,
	0xa0, 0xb1, 0x98, 0x0a, 0x2d, 0x9c, 0xbc, 0xd1, 0xfd, 0xcc, 0x00, 0x66, 0xaf, 0x64, 0x45, 0x3a,
	0xc7, 0x88, 0xbe, 0x8d, 0x88, 0x80, 0x89, 0xb8, 0x03, 0x6d, 0xae, 0xa2, 0xa9, 0xd0, 0x28, 0xeb,
	0x6e, 0xd8, 0xe2, 0xea, 0xb9, 0x58, 0xd1, 0x41, 0xef, 0xa6, 0x0e, 0xc6, 0x2f, 0x60, 0xb0, 0xfc,
	0x1a, 0x98, 0x5b, 0x5e, 0x08, 0xa5, 0x23, 0x53, 0x1b, 0x0f, 0xa3, 0x74, 0xcc, 0xfa, 0x92, 0xdb,
	0x5b, 0xee, 0xd4, 0x5f, 0x55, 0x0e, 0x1c, 0x74, 0xc9, 0x93, 0xf1, 0x5f, 0x1e, 0xf4, 0x2f, 0x24,
	0xe5, 0xf9, 0x33, 0xa9, 0x79, 0x9c, 0xb2, 0xfb, 0x35, 0xc4, 0xdc, 0x6e, 0xcb, 0x7e, 0x4d, 0xde,
	0xb5, 0xc0, 0x24, 0x21, 0x8f, 0x61, 0xc3, 0x19, 0x5f, 0x4b, 0x51, 0xe2, 0xb0, 0xb6, 0x7d, 0x5a,
	0xb7, 0xf0, 0x97, 0x06, 0x9d, 0x24, 0xe4, 0x5d, 0xd8, 0x5c, 0xf2, 0xc3, 0x4a, 0xdb, 0xde, 0x6d,
	0xd4, 0x3c, 0xb1, 0xe0, 0x46, 0xc8, 0xb5, 0x79, 0x65, 0x17, 0xa6, 0x00, 0x5c, 0x45, 0x78, 0x19,
	0xb0, 0x7b, 0xdd, 0xb0, 0xc3, 0x15, 0xe6, 0x3b, 0xfe, 0x6d, 0x71, 0xbe, 0x85, 0xe0, 0xf6, 0xc1,
	0xdd, 0xfd, 0x28, 0x76, 0xe5, 0xf2, 0x43, 0x77, 0x88, 0x93, 0x65, 0xf9, 0x34, 0x96, 0xe5, 0x53,
	0x53, 0x48, 0xf3, 0x6e, 0x85, 0xac, 0xdd, 0x50, 0x48, 0xd5, 0xe5, 0x56, 0xad, 0xcb, 0xe3, 0x5f,
	0x3d, 0x18, 0xd6, 0xd3, 0x7a, 0xc1, 0x95, 0x7e, 0x83, 0xa5, 0x7f, 0x1f, 0xba, 0x6e, 0xb8, 0xa8,
	0xa0, 0x89, 0x0f, 0xe4, 0x82, 0xab, 0x1e, 0x34, 0xbc, 0x76, 0x3a, 0xfe, 0xa5, 0x01, 0xe4, 0x1c,
	0xff, 0xba, 0xf0, 0x75, 0x3b, 0x67, 0x72, 0xc6, 0x63, 0x46, 0x4e, 0x61, 0x50, 0xfd, 0x08, 0xa0,
	0xd6, 0x82, 0x5b, 0xfe, 0x0f, 0x70, 0x5e, 0x8c, 0x1e, 0xde, 0xf9, 0xe7, 0x40, 0xbe, 0x86, 0x61,
	0xfd, 0x61, 0x46, 0xa2, 0xd1, 0xad, 0x2f, 0xb6, 0xa5, 0xda, 0xfb, 0x97, 0xd7, 0x9c, 0xfc, 0x00,
	0xa3, 0xea, 0x05, 0xfe, 0xf6, 0xea, 0x2a, 0xe5, 0x39, 0xab, 0xf2, 0xdb, 0xaf, 0x6f, 0x5d, 0xf9,
	0xc9, 0x1a, 0xfd, 0xef, 0x2e, 0xb3, 0x25, 0x7f, 0xd5, 0xc6, 0x3f, 0xc7, 0x27, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x08, 0x26, 0x12, 0x49, 0x83, 0x0a, 0x00, 0x00,
}
