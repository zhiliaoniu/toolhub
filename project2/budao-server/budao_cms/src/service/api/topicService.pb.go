// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topicService.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 发布规则条件筛选的视频
type TopicRulePostVideoRequest struct {
	RuleID string `protobuf:"bytes,1,opt,name=ruleID" json:"ruleID,omitempty"`
}

func (m *TopicRulePostVideoRequest) Reset()                    { *m = TopicRulePostVideoRequest{} }
func (m *TopicRulePostVideoRequest) String() string            { return proto.CompactTextString(m) }
func (*TopicRulePostVideoRequest) ProtoMessage()               {}
func (*TopicRulePostVideoRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *TopicRulePostVideoRequest) GetRuleID() string {
	if m != nil {
		return m.RuleID
	}
	return ""
}

// 获取媒介名称
type TopicRuleViewListResponse struct {
	Code string    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *ViewList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TopicRuleViewListResponse) Reset()                    { *m = TopicRuleViewListResponse{} }
func (m *TopicRuleViewListResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleViewListResponse) ProtoMessage()               {}
func (*TopicRuleViewListResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *TopicRuleViewListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicRuleViewListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicRuleViewListResponse) GetData() *ViewList {
	if m != nil {
		return m.Data
	}
	return nil
}

type ViewList struct {
	Data  []*Video `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ViewList) Reset()                    { *m = ViewList{} }
func (m *ViewList) String() string            { return proto.CompactTextString(m) }
func (*ViewList) ProtoMessage()               {}
func (*ViewList) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *ViewList) GetData() []*Video {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ViewList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 获取媒介名称
type TopicRuleMediaNameResponse struct {
	Code string     `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string     `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *MediaName `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TopicRuleMediaNameResponse) Reset()                    { *m = TopicRuleMediaNameResponse{} }
func (m *TopicRuleMediaNameResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleMediaNameResponse) ProtoMessage()               {}
func (*TopicRuleMediaNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *TopicRuleMediaNameResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicRuleMediaNameResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicRuleMediaNameResponse) GetData() *MediaName {
	if m != nil {
		return m.Data
	}
	return nil
}

type MediaName struct {
	Data  []*MediaNameMessage `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64              `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *MediaName) Reset()                    { *m = MediaName{} }
func (m *MediaName) String() string            { return proto.CompactTextString(m) }
func (*MediaName) ProtoMessage()               {}
func (*MediaName) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *MediaName) GetData() []*MediaNameMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MediaName) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MediaNameMessage struct {
	MediaName string `protobuf:"bytes,1,opt,name=mediaName" json:"mediaName,omitempty"`
	Source    string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
}

func (m *MediaNameMessage) Reset()                    { *m = MediaNameMessage{} }
func (m *MediaNameMessage) String() string            { return proto.CompactTextString(m) }
func (*MediaNameMessage) ProtoMessage()               {}
func (*MediaNameMessage) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{5} }

func (m *MediaNameMessage) GetMediaName() string {
	if m != nil {
		return m.MediaName
	}
	return ""
}

func (m *MediaNameMessage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

// 获取规则信息
type TopicRuleInfoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TopicRuleInfoRequest) Reset()                    { *m = TopicRuleInfoRequest{} }
func (m *TopicRuleInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleInfoRequest) ProtoMessage()               {}
func (*TopicRuleInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{6} }

func (m *TopicRuleInfoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TopicRuleInfoResponse struct {
	Code string            `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TopicRuleInfoResponse) Reset()                    { *m = TopicRuleInfoResponse{} }
func (m *TopicRuleInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleInfoResponse) ProtoMessage()               {}
func (*TopicRuleInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

func (m *TopicRuleInfoResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicRuleInfoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicRuleInfoResponse) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// 删除规则
type TopicRuleDelRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *TopicRuleDelRequest) Reset()                    { *m = TopicRuleDelRequest{} }
func (m *TopicRuleDelRequest) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleDelRequest) ProtoMessage()               {}
func (*TopicRuleDelRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *TopicRuleDelRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 规则添加
type TopicRuleRequest struct {
	TopicID       string `protobuf:"bytes,1,opt,name=topicID" json:"topicID,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	MediaName     string `protobuf:"bytes,3,opt,name=mediaName" json:"mediaName,omitempty"`
	TitleLenS     string `protobuf:"bytes,4,opt,name=titleLenS" json:"titleLenS,omitempty"`
	TitleLenE     string `protobuf:"bytes,5,opt,name=titleLenE" json:"titleLenE,omitempty"`
	PlayCount     string `protobuf:"bytes,6,opt,name=play_count,json=playCount" json:"play_count,omitempty"`
	VideoDuration string `protobuf:"bytes,7,opt,name=video_duration,json=videoDuration" json:"video_duration,omitempty"`
	Source        string `protobuf:"bytes,8,opt,name=source" json:"source,omitempty"`
	SourceType    string `protobuf:"bytes,9,opt,name=source_type,json=sourceType" json:"source_type,omitempty"`
	PraiseCount   string `protobuf:"bytes,10,opt,name=praise_count,json=praiseCount" json:"praise_count,omitempty"`
	ShareCount    string `protobuf:"bytes,11,opt,name=share_count,json=shareCount" json:"share_count,omitempty"`
	FavCount      string `protobuf:"bytes,12,opt,name=fav_count,json=favCount" json:"fav_count,omitempty"`
	CommentCount  string `protobuf:"bytes,13,opt,name=comment_count,json=commentCount" json:"comment_count,omitempty"`
	Id            string `protobuf:"bytes,14,opt,name=id" json:"id,omitempty"`
}

func (m *TopicRuleRequest) Reset()                    { *m = TopicRuleRequest{} }
func (m *TopicRuleRequest) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleRequest) ProtoMessage()               {}
func (*TopicRuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

func (m *TopicRuleRequest) GetTopicID() string {
	if m != nil {
		return m.TopicID
	}
	return ""
}

func (m *TopicRuleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopicRuleRequest) GetMediaName() string {
	if m != nil {
		return m.MediaName
	}
	return ""
}

func (m *TopicRuleRequest) GetTitleLenS() string {
	if m != nil {
		return m.TitleLenS
	}
	return ""
}

func (m *TopicRuleRequest) GetTitleLenE() string {
	if m != nil {
		return m.TitleLenE
	}
	return ""
}

func (m *TopicRuleRequest) GetPlayCount() string {
	if m != nil {
		return m.PlayCount
	}
	return ""
}

func (m *TopicRuleRequest) GetVideoDuration() string {
	if m != nil {
		return m.VideoDuration
	}
	return ""
}

func (m *TopicRuleRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TopicRuleRequest) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *TopicRuleRequest) GetPraiseCount() string {
	if m != nil {
		return m.PraiseCount
	}
	return ""
}

func (m *TopicRuleRequest) GetShareCount() string {
	if m != nil {
		return m.ShareCount
	}
	return ""
}

func (m *TopicRuleRequest) GetFavCount() string {
	if m != nil {
		return m.FavCount
	}
	return ""
}

func (m *TopicRuleRequest) GetCommentCount() string {
	if m != nil {
		return m.CommentCount
	}
	return ""
}

func (m *TopicRuleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 规则列表
type TopicRuleListResponse struct {
	Code string         `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *TopicRuleList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TopicRuleListResponse) Reset()                    { *m = TopicRuleListResponse{} }
func (m *TopicRuleListResponse) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleListResponse) ProtoMessage()               {}
func (*TopicRuleListResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

func (m *TopicRuleListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TopicRuleListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TopicRuleListResponse) GetData() *TopicRuleList {
	if m != nil {
		return m.Data
	}
	return nil
}

type TopicRuleList struct {
	Data  []*TopicBack `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64       `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *TopicRuleList) Reset()                    { *m = TopicRuleList{} }
func (m *TopicRuleList) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleList) ProtoMessage()               {}
func (*TopicRuleList) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

func (m *TopicRuleList) GetData() []*TopicBack {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TopicRuleList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TopicBack struct {
	Data map[string]string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TopicBack) Reset()                    { *m = TopicBack{} }
func (m *TopicBack) String() string            { return proto.CompactTextString(m) }
func (*TopicBack) ProtoMessage()               {}
func (*TopicBack) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{12} }

func (m *TopicBack) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type TopicRuleMessage struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PostCount     string `protobuf:"bytes,2,opt,name=postCount" json:"postCount,omitempty"`
	CommentCount  string `protobuf:"bytes,3,opt,name=commentCount" json:"commentCount,omitempty"`
	FavCount      string `protobuf:"bytes,4,opt,name=favCount" json:"favCount,omitempty"`
	MediaName     string `protobuf:"bytes,5,opt,name=mediaName" json:"mediaName,omitempty"`
	Name          string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	PlayCount     string `protobuf:"bytes,7,opt,name=playCount" json:"playCount,omitempty"`
	PraiseCount   string `protobuf:"bytes,8,opt,name=praiseCount" json:"praiseCount,omitempty"`
	ShareCount    string `protobuf:"bytes,9,opt,name=shareCount" json:"shareCount,omitempty"`
	Source        string `protobuf:"bytes,10,opt,name=source" json:"source,omitempty"`
	SourceType    string `protobuf:"bytes,11,opt,name=sourceType" json:"sourceType,omitempty"`
	TitleLenE     string `protobuf:"bytes,12,opt,name=titleLenE" json:"titleLenE,omitempty"`
	TitleLenS     string `protobuf:"bytes,13,opt,name=titleLenS" json:"titleLenS,omitempty"`
	Topic         string `protobuf:"bytes,14,opt,name=topic" json:"topic,omitempty"`
	VideoDuration string `protobuf:"bytes,15,opt,name=videoDuration" json:"videoDuration,omitempty"`
}

func (m *TopicRuleMessage) Reset()                    { *m = TopicRuleMessage{} }
func (m *TopicRuleMessage) String() string            { return proto.CompactTextString(m) }
func (*TopicRuleMessage) ProtoMessage()               {}
func (*TopicRuleMessage) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{13} }

func (m *TopicRuleMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TopicRuleMessage) GetPostCount() string {
	if m != nil {
		return m.PostCount
	}
	return ""
}

func (m *TopicRuleMessage) GetCommentCount() string {
	if m != nil {
		return m.CommentCount
	}
	return ""
}

func (m *TopicRuleMessage) GetFavCount() string {
	if m != nil {
		return m.FavCount
	}
	return ""
}

func (m *TopicRuleMessage) GetMediaName() string {
	if m != nil {
		return m.MediaName
	}
	return ""
}

func (m *TopicRuleMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopicRuleMessage) GetPlayCount() string {
	if m != nil {
		return m.PlayCount
	}
	return ""
}

func (m *TopicRuleMessage) GetPraiseCount() string {
	if m != nil {
		return m.PraiseCount
	}
	return ""
}

func (m *TopicRuleMessage) GetShareCount() string {
	if m != nil {
		return m.ShareCount
	}
	return ""
}

func (m *TopicRuleMessage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TopicRuleMessage) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *TopicRuleMessage) GetTitleLenE() string {
	if m != nil {
		return m.TitleLenE
	}
	return ""
}

func (m *TopicRuleMessage) GetTitleLenS() string {
	if m != nil {
		return m.TitleLenS
	}
	return ""
}

func (m *TopicRuleMessage) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *TopicRuleMessage) GetVideoDuration() string {
	if m != nil {
		return m.VideoDuration
	}
	return ""
}

func init() {
	proto.RegisterType((*TopicRulePostVideoRequest)(nil), "api.TopicRulePostVideoRequest")
	proto.RegisterType((*TopicRuleViewListResponse)(nil), "api.TopicRuleViewListResponse")
	proto.RegisterType((*ViewList)(nil), "api.ViewList")
	proto.RegisterType((*TopicRuleMediaNameResponse)(nil), "api.TopicRuleMediaNameResponse")
	proto.RegisterType((*MediaName)(nil), "api.MediaName")
	proto.RegisterType((*MediaNameMessage)(nil), "api.MediaNameMessage")
	proto.RegisterType((*TopicRuleInfoRequest)(nil), "api.TopicRuleInfoRequest")
	proto.RegisterType((*TopicRuleInfoResponse)(nil), "api.TopicRuleInfoResponse")
	proto.RegisterType((*TopicRuleDelRequest)(nil), "api.TopicRuleDelRequest")
	proto.RegisterType((*TopicRuleRequest)(nil), "api.TopicRuleRequest")
	proto.RegisterType((*TopicRuleListResponse)(nil), "api.TopicRuleListResponse")
	proto.RegisterType((*TopicRuleList)(nil), "api.TopicRuleList")
	proto.RegisterType((*TopicBack)(nil), "api.TopicBack")
	proto.RegisterType((*TopicRuleMessage)(nil), "api.TopicRuleMessage")
}

func init() { proto.RegisterFile("topicService.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 846 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6d, 0x4f, 0xdb, 0x3a,
	0x14, 0x56, 0x5f, 0x69, 0x4e, 0x9b, 0x5e, 0x64, 0xe0, 0x2a, 0xf4, 0x72, 0xa1, 0xe4, 0x02, 0xe2,
	0x4a, 0x53, 0x3f, 0x80, 0xa6, 0x55, 0x93, 0x26, 0x8d, 0xd1, 0x6a, 0x43, 0x82, 0x69, 0x2b, 0x88,
	0xaf, 0xc8, 0x6b, 0x5c, 0x16, 0xd1, 0xc6, 0x59, 0xe2, 0x74, 0xea, 0xcf, 0xd8, 0x2f, 0xd9, 0x7e,
	0xc3, 0x7e, 0xd9, 0xe4, 0x97, 0x38, 0x71, 0x28, 0x48, 0x4c, 0xfb, 0x16, 0x3f, 0xe7, 0xc5, 0xc7,
	0x3e, 0xcf, 0x73, 0x62, 0x40, 0x8c, 0x86, 0xfe, 0xf8, 0x92, 0x44, 0x73, 0x7f, 0x4c, 0x7a, 0x61,
	0x44, 0x19, 0x45, 0x15, 0x1c, 0xfa, 0x9d, 0xd6, 0x98, 0xce, 0x66, 0x34, 0x90, 0x90, 0x7b, 0x0c,
	0x9b, 0x57, 0xdc, 0x71, 0x94, 0x4c, 0xc9, 0x07, 0x1a, 0xb3, 0x6b, 0xdf, 0x23, 0x74, 0x44, 0xbe,
	0x24, 0x24, 0x66, 0xe8, 0x6f, 0xa8, 0x47, 0xc9, 0x94, 0x9c, 0x0d, 0x9c, 0x52, 0xb7, 0x74, 0x68,
	0x8d, 0xd4, 0xca, 0xf5, 0x72, 0x41, 0xd7, 0x3e, 0xf9, 0x7a, 0xee, 0xc7, 0x6c, 0x44, 0xe2, 0x90,
	0x06, 0x31, 0x41, 0x08, 0xaa, 0x63, 0xea, 0x11, 0x15, 0x22, 0xbe, 0xd1, 0x2a, 0x54, 0x66, 0xf1,
	0xad, 0x53, 0x16, 0x10, 0xff, 0x44, 0xbb, 0x50, 0xf5, 0x30, 0xc3, 0x4e, 0xa5, 0x5b, 0x3a, 0x6c,
	0x1e, 0xd9, 0x3d, 0x1c, 0xfa, 0x3d, 0x9d, 0x4a, 0x98, 0xdc, 0xd7, 0xd0, 0x48, 0x11, 0xb4, 0xad,
	0xdc, 0x4b, 0xdd, 0xca, 0x61, 0xf3, 0x08, 0x94, 0x3b, 0x2f, 0x55, 0xe0, 0x68, 0x1d, 0x6a, 0x63,
	0x9a, 0x04, 0x4c, 0x6c, 0x51, 0x1d, 0xc9, 0x85, 0x3b, 0x81, 0x8e, 0xae, 0xf3, 0x82, 0x78, 0x3e,
	0x7e, 0x8f, 0x67, 0xe4, 0x89, 0x85, 0xba, 0x46, 0xa1, 0x6d, 0xb1, 0x73, 0x96, 0x4b, 0x56, 0x7a,
	0x0e, 0x96, 0x86, 0xd0, 0xff, 0x46, 0xa9, 0x1b, 0x66, 0xc0, 0x05, 0x89, 0x63, 0x7c, 0x4b, 0x1e,
	0xad, 0xfa, 0x1d, 0xac, 0x16, 0xfd, 0xd1, 0x16, 0x58, 0xb3, 0x14, 0x53, 0x05, 0x67, 0x00, 0xef,
	0x53, 0x4c, 0x93, 0x68, 0x4c, 0x54, 0xe1, 0x6a, 0xe5, 0x1e, 0xc0, 0xba, 0x3e, 0xff, 0x59, 0x30,
	0xd1, 0x7d, 0x6d, 0x43, 0xd9, 0xf7, 0x54, 0x9a, 0xb2, 0xef, 0xb9, 0x3f, 0x4a, 0xb0, 0x51, 0x70,
	0x7c, 0xd2, 0x1d, 0xf5, 0xf5, 0x1d, 0xf1, 0x23, 0xef, 0x89, 0x23, 0x2f, 0xcd, 0xd7, 0x1b, 0x60,
	0x86, 0x87, 0x01, 0x8b, 0x16, 0xf2, 0x06, 0x3a, 0x2f, 0xc0, 0xd2, 0x10, 0x4f, 0x7c, 0x47, 0x16,
	0x6a, 0x2f, 0xfe, 0xc9, 0x2f, 0x68, 0x8e, 0xa7, 0x49, 0x7a, 0x2e, 0xb9, 0x78, 0x59, 0xee, 0x97,
	0xdc, 0x7d, 0x58, 0xd3, 0x3b, 0x0c, 0xc8, 0xf4, 0xa1, 0x93, 0x7d, 0xaf, 0xc0, 0xaa, 0xf6, 0x4b,
	0x9d, 0x1c, 0x58, 0x11, 0xe2, 0xd0, 0xbc, 0x4e, 0x97, 0xfc, 0xb8, 0x01, 0xbf, 0x61, 0xb9, 0x9d,
	0xf8, 0x36, 0xaf, 0xbe, 0x52, 0xbc, 0xfa, 0x2d, 0xb0, 0x98, 0xcf, 0xa6, 0xe4, 0x9c, 0x04, 0x97,
	0x4e, 0x55, 0x5a, 0x35, 0x90, 0xb7, 0x0e, 0x9d, 0x9a, 0x69, 0x1d, 0xa2, 0x7f, 0x01, 0xc2, 0x29,
	0x5e, 0xdc, 0x48, 0x0e, 0xd4, 0xa5, 0x99, 0x23, 0xa7, 0x1c, 0x40, 0xfb, 0xd0, 0x9e, 0x73, 0x8a,
	0xdf, 0x78, 0x49, 0x84, 0x99, 0x4f, 0x03, 0x67, 0x45, 0xb8, 0xd8, 0x02, 0x1d, 0x28, 0x30, 0xd7,
	0xfc, 0x46, 0xbe, 0xf9, 0x68, 0x07, 0x9a, 0xf2, 0xeb, 0x86, 0x2d, 0x42, 0xe2, 0x58, 0xc2, 0x08,
	0x12, 0xba, 0x5a, 0x84, 0x04, 0xed, 0x42, 0x2b, 0x8c, 0xb0, 0x1f, 0x13, 0x55, 0x00, 0x08, 0x8f,
	0xa6, 0xc4, 0x64, 0x09, 0x3c, 0xc7, 0x67, 0x1c, 0xa5, 0x1e, 0x4d, 0x95, 0x83, 0x43, 0xd2, 0xe1,
	0x1f, 0xb0, 0x26, 0x78, 0xae, 0xcc, 0x2d, 0x61, 0x6e, 0x4c, 0xf0, 0x5c, 0x1a, 0xff, 0x03, 0x9b,
	0xcf, 0x1a, 0x12, 0x30, 0xe5, 0x60, 0x0b, 0x87, 0x96, 0x02, 0xa5, 0x93, 0xec, 0x58, 0x5b, 0x77,
	0x8c, 0xe4, 0xa8, 0xf8, 0x1b, 0x73, 0xe5, 0xc0, 0x90, 0x2b, 0x32, 0xa9, 0x98, 0x1b, 0x2e, 0x67,
	0x60, 0x1b, 0xb0, 0xd6, 0xb9, 0x94, 0x6d, 0x3b, 0x0b, 0x7c, 0x83, 0xc7, 0x77, 0x8f, 0xea, 0x35,
	0x02, 0x4b, 0x3b, 0xa2, 0x67, 0x46, 0x1a, 0xc7, 0x4c, 0xf3, 0xe7, 0xe8, 0xff, 0x33, 0xcf, 0xeb,
	0x74, 0x48, 0x14, 0xc8, 0xcf, 0xd9, 0x17, 0xd2, 0x58, 0xde, 0xb3, 0x4a, 0x91, 0x01, 0xc8, 0x05,
	0xa3, 0x11, 0x8a, 0xda, 0x66, 0x73, 0x3a, 0xa0, 0xbb, 0xa9, 0xc8, 0x9d, 0x75, 0xd7, 0xd0, 0x45,
	0xad, 0xa8, 0x8b, 0x54, 0x49, 0x75, 0x53, 0x49, 0x9a, 0xdd, 0x8a, 0xcb, 0x39, 0xba, 0x77, 0x21,
	0x4f, 0x3d, 0x45, 0x66, 0x83, 0x8d, 0xdb, 0x90, 0xa3, 0x9e, 0x26, 0x74, 0x46, 0xc6, 0x4c, 0x09,
	0x60, 0x28, 0x81, 0xc7, 0x69, 0xda, 0x6b, 0x12, 0x67, 0x42, 0x30, 0x54, 0xda, 0x2a, 0xaa, 0xd4,
	0x50, 0xb8, 0x5d, 0x54, 0xf8, 0x3a, 0xd4, 0xc4, 0xf0, 0x50, 0x0c, 0x96, 0x0b, 0xb4, 0x07, 0xa6,
	0x48, 0x9d, 0xbf, 0x96, 0x28, 0xf7, 0xe8, 0x5b, 0x15, 0x5a, 0x57, 0xb9, 0xbf, 0x34, 0x7a, 0x05,
	0x8d, 0x28, 0xe5, 0xa3, 0xfc, 0x71, 0x7c, 0x4c, 0x48, 0xb4, 0x90, 0x32, 0x10, 0xb3, 0xab, 0xd3,
	0x59, 0xc2, 0xe8, 0x54, 0x21, 0xcf, 0x61, 0x85, 0x87, 0x9f, 0x78, 0x9e, 0x8a, 0x2e, 0x4e, 0xbe,
	0xce, 0x9a, 0x80, 0x4f, 0xc5, 0x03, 0x40, 0x87, 0xf5, 0x65, 0xd8, 0x80, 0x4c, 0x91, 0x63, 0x86,
	0x65, 0x83, 0x75, 0x79, 0xe4, 0x89, 0xac, 0x97, 0x4f, 0x78, 0xb4, 0xb9, 0x6c, 0xea, 0x2f, 0xad,
	0xd9, 0xf8, 0xc1, 0xf4, 0x01, 0x78, 0x8a, 0x0b, 0xea, 0xf9, 0x93, 0xc5, 0x93, 0xca, 0x7e, 0x0b,
	0x76, 0x94, 0xff, 0xaf, 0x3f, 0x74, 0x63, 0x3b, 0x66, 0xce, 0xfb, 0xef, 0x80, 0x21, 0xb4, 0xa2,
	0xdc, 0x43, 0xe6, 0xa1, 0x3c, 0xdb, 0x66, 0x9e, 0x7b, 0xef, 0x9e, 0x01, 0xd8, 0x5c, 0x5c, 0xd2,
	0xe6, 0x11, 0x8a, 0x0a, 0x01, 0xc5, 0xd7, 0xd5, 0xd2, 0x53, 0x7d, 0xaa, 0x8b, 0x67, 0xd9, 0xf1,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x23, 0x79, 0x0a, 0xbf, 0x09, 0x00, 0x00,
}
