// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commonService.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CategoryListResponse struct {
	Code string              `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data []*QuestionCategory `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *CategoryListResponse) Reset()                    { *m = CategoryListResponse{} }
func (m *CategoryListResponse) String() string            { return proto.CompactTextString(m) }
func (*CategoryListResponse) ProtoMessage()               {}
func (*CategoryListResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *CategoryListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CategoryListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CategoryListResponse) GetData() []*QuestionCategory {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuestionCategory struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CategoryName string `protobuf:"bytes,2,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
}

func (m *QuestionCategory) Reset()                    { *m = QuestionCategory{} }
func (m *QuestionCategory) String() string            { return proto.CompactTextString(m) }
func (*QuestionCategory) ProtoMessage()               {}
func (*QuestionCategory) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *QuestionCategory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QuestionCategory) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

type TypeListResponse struct {
	Code string          `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data []*QuestionType `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *TypeListResponse) Reset()                    { *m = TypeListResponse{} }
func (m *TypeListResponse) String() string            { return proto.CompactTextString(m) }
func (*TypeListResponse) ProtoMessage()               {}
func (*TypeListResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *TypeListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TypeListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TypeListResponse) GetData() []*QuestionType {
	if m != nil {
		return m.Data
	}
	return nil
}

type QuestionType struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TypeName string `protobuf:"bytes,2,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (m *QuestionType) Reset()                    { *m = QuestionType{} }
func (m *QuestionType) String() string            { return proto.CompactTextString(m) }
func (*QuestionType) ProtoMessage()               {}
func (*QuestionType) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *QuestionType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QuestionType) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

type AddCategoryReq struct {
	CategoryName string `protobuf:"bytes,1,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
}

func (m *AddCategoryReq) Reset()                    { *m = AddCategoryReq{} }
func (m *AddCategoryReq) String() string            { return proto.CompactTextString(m) }
func (*AddCategoryReq) ProtoMessage()               {}
func (*AddCategoryReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *AddCategoryReq) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

type AddTypeReq struct {
	TypeName string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
}

func (m *AddTypeReq) Reset()                    { *m = AddTypeReq{} }
func (m *AddTypeReq) String() string            { return proto.CompactTextString(m) }
func (*AddTypeReq) ProtoMessage()               {}
func (*AddTypeReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *AddTypeReq) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

type InternalUserListResponse struct {
	Code string    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Data *UserList `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *InternalUserListResponse) Reset()                    { *m = InternalUserListResponse{} }
func (m *InternalUserListResponse) String() string            { return proto.CompactTextString(m) }
func (*InternalUserListResponse) ProtoMessage()               {}
func (*InternalUserListResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *InternalUserListResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *InternalUserListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *InternalUserListResponse) GetData() *UserList {
	if m != nil {
		return m.Data
	}
	return nil
}

type UserList struct {
	Data  []*User `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	Count uint64  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *UserList) Reset()                    { *m = UserList{} }
func (m *UserList) String() string            { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()               {}
func (*UserList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *UserList) GetData() []*User {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*CategoryListResponse)(nil), "api.CategoryListResponse")
	proto.RegisterType((*QuestionCategory)(nil), "api.QuestionCategory")
	proto.RegisterType((*TypeListResponse)(nil), "api.TypeListResponse")
	proto.RegisterType((*QuestionType)(nil), "api.QuestionType")
	proto.RegisterType((*AddCategoryReq)(nil), "api.AddCategoryReq")
	proto.RegisterType((*AddTypeReq)(nil), "api.AddTypeReq")
	proto.RegisterType((*InternalUserListResponse)(nil), "api.InternalUserListResponse")
	proto.RegisterType((*UserList)(nil), "api.UserList")
}

func init() { proto.RegisterFile("commonService.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6b, 0xe2, 0x40,
	0x14, 0x25, 0x89, 0xbb, 0xab, 0xd7, 0xe8, 0x66, 0x47, 0x17, 0xb2, 0x59, 0x04, 0xd7, 0x65, 0x41,
	0x5f, 0x5c, 0x70, 0x59, 0x7c, 0xe8, 0x43, 0x11, 0x1f, 0xda, 0x42, 0x11, 0x9a, 0xb6, 0xcf, 0x32,
	0xcd, 0x5c, 0x24, 0x60, 0x32, 0xf9, 0x18, 0x0b, 0xfe, 0xa8, 0xfe, 0xc7, 0x92, 0x99, 0x24, 0x24,
	0xd1, 0xbe, 0xf8, 0x36, 0x73, 0xe6, 0x7e, 0x9c, 0x7b, 0xcf, 0x19, 0x18, 0x78, 0x3c, 0x08, 0x78,
	0xf8, 0x88, 0xc9, 0xab, 0xef, 0xe1, 0x3c, 0x4a, 0xb8, 0xe0, 0xc4, 0xa0, 0x91, 0xef, 0x98, 0xea,
	0x45, 0x41, 0x93, 0x1d, 0x0c, 0xd7, 0x54, 0xe0, 0x8e, 0x27, 0xc7, 0x7b, 0x3f, 0x15, 0x2e, 0xa6,
	0x11, 0x0f, 0x53, 0x24, 0x04, 0x5a, 0x1e, 0x67, 0x68, 0x6b, 0x63, 0x6d, 0xda, 0x71, 0xe5, 0x99,
	0x58, 0x60, 0x04, 0xe9, 0xce, 0xd6, 0x25, 0x94, 0x1d, 0xc9, 0x0c, 0x5a, 0x8c, 0x0a, 0x6a, 0x1b,
	0x63, 0x63, 0xda, 0x5d, 0x7c, 0x9f, 0xd3, 0xc8, 0x9f, 0x3f, 0x1c, 0x30, 0x15, 0x3e, 0x0f, 0x8b,
	0xb2, 0xae, 0x0c, 0x99, 0xdc, 0x80, 0xd5, 0x7c, 0x21, 0x7d, 0xd0, 0x7d, 0x96, 0xb7, 0xd0, 0x7d,
	0x46, 0x7e, 0x43, 0xcf, 0xcb, 0xdf, 0xb6, 0x21, 0x0d, 0x30, 0x6f, 0x65, 0x16, 0xe0, 0x86, 0x06,
	0x38, 0xd9, 0x82, 0xf5, 0x74, 0x8c, 0xf0, 0x02, 0xb6, 0x7f, 0x6a, 0x6c, 0xbf, 0xd5, 0xd8, 0x66,
	0x25, 0x73, 0xa6, 0x57, 0x60, 0x56, 0xd1, 0x13, 0x96, 0x3f, 0xa1, 0x23, 0x8e, 0x11, 0x56, 0x19,
	0xb6, 0x33, 0x40, 0xb2, 0xfb, 0x0f, 0xfd, 0x15, 0x63, 0xe5, 0xec, 0x18, 0x9f, 0x0e, 0xa5, 0x9d,
	0x19, 0x6a, 0x06, 0xb0, 0x62, 0x4c, 0x92, 0xc0, 0xb8, 0xde, 0x41, 0x6b, 0x74, 0xf0, 0xc0, 0xbe,
	0x0b, 0x05, 0x26, 0x21, 0xdd, 0x3f, 0xa7, 0x98, 0x5c, 0xb0, 0x87, 0x5f, 0xe5, 0x1e, 0xb4, 0x69,
	0x77, 0xd1, 0x93, 0x7b, 0x28, 0x4b, 0xa9, 0x1d, 0x5c, 0x43, 0xbb, 0x40, 0xc8, 0x28, 0x0f, 0xd7,
	0xe4, 0xda, 0x3a, 0x65, 0xb8, 0x0a, 0x25, 0x43, 0xf8, 0xe4, 0xf1, 0x43, 0x28, 0x64, 0x87, 0x96,
	0xab, 0x2e, 0x8b, 0x37, 0x1d, 0x7a, 0xeb, 0xaa, 0x05, 0xc9, 0x12, 0xcc, 0xaa, 0xd3, 0x88, 0x29,
	0x0b, 0x6d, 0x0e, 0xfb, 0xbd, 0x8b, 0xb1, 0xf3, 0x43, 0xde, 0xce, 0x5a, 0xf1, 0x2f, 0xb4, 0x0b,
	0xc1, 0x1b, 0x49, 0xca, 0x70, 0x27, 0x6e, 0x58, 0x42, 0xb7, 0xa2, 0x01, 0x19, 0xc8, 0xa8, 0xba,
	0x2a, 0x8e, 0x02, 0x15, 0xc3, 0x4a, 0xa7, 0x2f, 0xb9, 0x0a, 0xe4, 0x6b, 0x91, 0x94, 0x6b, 0x72,
	0x3e, 0xe1, 0x16, 0xac, 0xa6, 0x16, 0xa4, 0xfc, 0x05, 0xc5, 0x18, 0x71, 0x66, 0x26, 0x67, 0x24,
	0xe1, 0x8f, 0x94, 0x7b, 0xf9, 0x2c, 0xbf, 0xe3, 0xbf, 0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4,
	0x0c, 0xea, 0x87, 0xb8, 0x03, 0x00, 0x00,
}
